import{aO as l,di as h,V as g,b9 as f,B as w,N as d}from"./main-DR_xwlHl.js";import{p as n}from"./SimpleRenderer-CtmUDuGY.js";import{fromJSON as u}from"./jsonUtils-9P2iPj21.js";import{d as b}from"./FeatureSet-Dfe2zuGG.js";import{S,y as V}from"./LayerView-CD6atViu.js";import{t as _}from"./GraphicContainer-DZBDXaWz.js";import{A as T}from"./GraphicsView2D-DP7nSLhj.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-BKYNV93q.js";import"./colorRamps-DPq8OKeb.js";import"./ColorStop-CqsY8dqo.js";import"./visualVariableUtils-BScBQ5tW.js";import"./lengthUtils-DiF_VnKj.js";import"./typeUtils-BgNmI9tV.js";import"./ClassBreaksRenderer-C7PDQDSX.js";import"./RendererLegendOptions-DZFDfO_W.js";import"./LRUCache-BDoXR0mO.js";import"./MemCache-BRhZmtF2.js";import"./Version-Dkw8X6BN.js";import"./FieldsIndex-hzbjCmqd.js";import"./timeZoneUtils-BuN6Qp8C.js";import"./utils-DDFIxlur.js";import"./defaultCIMValues-BMJlYWGj.js";import"./enums-CD-fX3vU.js";import"./heatmapUtils-U44k0jYc.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-yNDHjcRp.js";import"./styleUtils-B4Jm_5aJ.js";import"./Field-DhgSwzL_.js";import"./fieldType-wcv3badA.js";import"./Container-DDfp15rM.js";import"./MapView-DebE8KGa.js";import"./Cyclical-B_u3_FSl.js";import"./CollectionFlattener-CgqLJkhZ.js";import"./workers-Bmo_KZTz.js";import"./Queue-DAlTa1PR.js";import"./intl-Xwi3kkZi.js";import"./projection-r5Syl_wQ.js";import"./projectBuffer-DHC_Xvkb.js";import"./TileInfo-D3UwWn26.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-CRjeZL-a.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-D-VmSWKe.js";import"./signal-DpdHNB-N.js";import"./Map-DRC7ZKdr.js";import"./Basemap-DHplCprh.js";import"./loadAll-D7CgJGZT.js";import"./PortalItem-N5xGSJQ8.js";import"./writeUtils-BoN5KkUi.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CDE6eeQO.js";import"./TablesMixin-v2EDXS2X.js";import"./Layer-Dmbscqbs.js";import"./TimeExtent-Binb6qYY.js";import"./GraphicsCollection-yn6h-9Kj.js";import"./HeightModelInfo-CX6EC_ZL.js";import"./ReactiveMap-BVH-AOZQ.js";import"./Query-CwLwtfbR.js";import"./HighlightDefaults-j0GSJ5gH.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-D6LMvAp1.js";import"./TileKey-c4upOiup.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-HsVal6o-.js";import"./normalizeUtilsCommon-Cwgy1b1I.js";import"./utils-CQXs1fcZ.js";import"./utils-HdXg7529.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CYjy8Z2N.js";import"./vec32-BaKgwqUU.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DS1w8OP_.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-GrpEy0Hn.js";import"./capabilities-Du2wdNlQ.js";import"./ColorBackground-C4Ns_3dU.js";import"./parser-6ZDCoyI9.js";import"./layerViewUtils-axIUlHF5.js";import"./AGraphicContainer-DTW0X3Ym.js";import"./TechniqueInstance-DZC3YSq_.js";import"./UpdateTracking2D-CGdyd6h5.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-uzI7c5Ad.js";import"./memoryEstimations-CyLIlzmh.js";import"./GeometryUtils-B0hH_wI6.js";import"./rasterizingUtils--zFQNzh9.js";import"./floatRGBA-4fveVMei.js";import"./Rect-CUzevAry.js";import"./Utils-DlvfH2vN.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-CUr1hJNb.js";import"./VertexArrayObject-CxMJEJA4.js";import"./TileContainer-CGy4qgDk.js";import"./WGLContainer-Kvs-hU1v.js";import"./ProgramTemplate-DAlsFMIB.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bp1wY35y.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DwrwX_Gd.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-CjV_x0YA.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-C-C3vR9h.js";import"./ShaderBuilder-CiQAWI6e.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CuBOszci.js";import"./OverrideHelper-DWOVd_-F.js";import"./colorUtils-ChCAec8W.js";import"./quantizationUtils-BGK4HU2F.js";import"./AttributeStore-C3CbY-hx.js";import"./labelUtils-BehckSwU.js";import"./queryUtils-D88yyKCO.js";import"./json-Wa8cmqdu.js";import"./timeSupport-TS6G0V87.js";import"./TimeOnly-bnExzJtq.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-Dks7O53d.js";import"./dehydratedFeatures-Cp9_lnlz.js";let y=class extends S(V){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),e=r.hitTest(i);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=t;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,i=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of i){const t=b.fromJSON(p),e=new g(t.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>this.layer?.lineSymbol,i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>this.layer?.pointSymbol,i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Rt=y;export{Rt as default};
