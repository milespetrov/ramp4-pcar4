import{B as e,D as p,N as n,Y as l,n as d,aO as u,a9 as h}from"./main-DR_xwlHl.js";import{c}from"./GraphicsCollection-yn6h-9Kj.js";import{r as y}from"./BitmapContainer-f8wMSzxw.js";import{S as f,y as _}from"./LayerView-CD6atViu.js";import{A as x}from"./GraphicsView2D-DP7nSLhj.js";import{h as H}from"./HighlightGraphicContainer-DvBdytK3.js";import{_ as w}from"./ExportStrategy-DlbBknPV.js";import{u as v}from"./MapView-DebE8KGa.js";import{y as I}from"./ExportImageParameters-DTif2psP.js";import{i as $}from"./timeSupport-DjvyckPY.js";import{i as V}from"./RefreshableLayerView-DagXL0Fc.js";import{S as E}from"./MapServiceLayerViewHelper-D_S6I5tD.js";import{r as G}from"./drapedUtils-BM1Yn0L1.js";import{c as P}from"./HighlightDefaults-j0GSJ5gH.js";import"./preload-helper-ExcqyqRp.js";import"./WGLContainer-Kvs-hU1v.js";import"./Utils-DlvfH2vN.js";import"./enums-Dk3osxpS.js";import"./vec2f32-BbH2jxlN.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-DAlsFMIB.js";import"./Texture-DS1w8OP_.js";import"./signal-DpdHNB-N.js";import"./VertexArrayObject-CxMJEJA4.js";import"./memoryEstimations-CyLIlzmh.js";import"./Tile-D6LMvAp1.js";import"./common-DQOJ18NT.js";import"./TileKey-c4upOiup.js";import"./vec2-maR1OrZI.js";import"./Queue-DAlTa1PR.js";import"./ReactiveMap-BVH-AOZQ.js";import"./quickselect-QQC62dOK.js";import"./Query-CwLwtfbR.js";import"./Field-DhgSwzL_.js";import"./fieldType-wcv3badA.js";import"./TimeExtent-Binb6qYY.js";import"./mat3-CruJiiUv.js";import"./vec32-BaKgwqUU.js";import"./vec3f32-nZdmKIgz.js";import"./definitions-CPtb4TQS.js";import"./Container-DDfp15rM.js";import"./parser-6ZDCoyI9.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CDE6eeQO.js";import"./StyleDefinition-Bp1wY35y.js";import"./enums-CD-fX3vU.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-DohEyf3f.js";import"./featureConversionUtils-DwrwX_Gd.js";import"./OptimizedFeature-uzI7c5Ad.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BitmapTechnique-AQYZZD_W.js";import"./GraphShaderModule-C-C3vR9h.js";import"./FramebufferObject-CUr1hJNb.js";import"./ShaderBuilder-CiQAWI6e.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./layerViewUtils-axIUlHF5.js";import"./UpdatingHandles-D-VmSWKe.js";import"./FieldsIndex-hzbjCmqd.js";import"./timeZoneUtils-BuN6Qp8C.js";import"./UpdateTracking2D-CGdyd6h5.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-B0hH_wI6.js";import"./utils-DDFIxlur.js";import"./defaultCIMValues-BMJlYWGj.js";import"./rasterizingUtils--zFQNzh9.js";import"./floatRGBA-4fveVMei.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-DWOVd_-F.js";import"./colorUtils-ChCAec8W.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./quantizationUtils-BGK4HU2F.js";import"./AttributeStore-C3CbY-hx.js";import"./intl-Xwi3kkZi.js";import"./labelUtils-BehckSwU.js";import"./queryUtils-D88yyKCO.js";import"./projection-r5Syl_wQ.js";import"./projectBuffer-DHC_Xvkb.js";import"./normalizeUtils-HsVal6o-.js";import"./normalizeUtilsCommon-Cwgy1b1I.js";import"./utils-CQXs1fcZ.js";import"./utils-HdXg7529.js";import"./json-Wa8cmqdu.js";import"./timeSupport-TS6G0V87.js";import"./TimeOnly-bnExzJtq.js";import"./FeatureCommandQueue-CjV_x0YA.js";import"./lengthUtils-DiF_VnKj.js";import"./streamLayerUtils-CKwt2uXH.js";import"./capabilities-Du2wdNlQ.js";import"./QueueProcessor-CuBOszci.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-Dks7O53d.js";import"./dehydratedFeatures-Cp9_lnlz.js";import"./AGraphicContainer-DTW0X3Ym.js";import"./TechniqueInstance-DZC3YSq_.js";import"./TileContainer-CGy4qgDk.js";import"./TileInfo-D3UwWn26.js";import"./TileKey-DZd6gJy7.js";import"./Cyclical-B_u3_FSl.js";import"./CollectionFlattener-CgqLJkhZ.js";import"./workers-Bmo_KZTz.js";import"./themeUtils-CRjeZL-a.js";import"./uuid-Cl5lrJ4c.js";import"./Map-DRC7ZKdr.js";import"./Basemap-DHplCprh.js";import"./loadAll-D7CgJGZT.js";import"./PortalItem-N5xGSJQ8.js";import"./writeUtils-BoN5KkUi.js";import"./TablesMixin-v2EDXS2X.js";import"./Layer-Dmbscqbs.js";import"./HeightModelInfo-CX6EC_ZL.js";import"./ViewingMode-HRfKv6NR.js";import"./Scheduler-CYjy8Z2N.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-GrpEy0Hn.js";import"./Version-Dkw8X6BN.js";import"./ColorBackground-C4Ns_3dU.js";import"./scaleUtils-CqYOq9pM.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-DR4MQF1X.js";import"./popupUtils-rkUtr7c0.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return e([p()],i.prototype,"exportImageParameters",void 0),e([p({readOnly:!0})],i.prototype,"floors",null),e([p({readOnly:!0})],i.prototype,"exportImageVersion",null),e([p()],i.prototype,"layer",void 0),e([p()],i.prototype,"suspended",void 0),e([p({readOnly:!0})],i.prototype,"timeExtent",null),i=e([n("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(V(f(_))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,o=r>=10.3,g=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new H(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new E({createFetchPopupFeaturesQueryGeometry:(s,a)=>G(s,a,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,a)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:a})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,o){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,r,o){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const r=v(t);if(r.length===0)return h();const o=i?.name??P;return this._addHighlightGraphics(r,o),h(()=>!this.destroyed&&this._removeHighlightGraphics(r,o))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(r=>r.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(r=>r.uid),i)}};e([p()],m.prototype,"strategy",void 0),e([p()],m.prototype,"updating",void 0),m=e([n("esri.views.2d.layers.MapImageLayerView2D")],m);const Qi=m;export{Qi as default};
