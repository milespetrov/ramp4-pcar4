import{a0 as N,cI as n}from"./main-Dej48_ap.js";import"./mat4-CotwOM5H.js";import"./mat4f64-xsZDPPj0.js";import"./vec32-DUONe_D1.js";import"./projectionUtils-BSvkgLXR.js";import"./projectVectorToVector-jBMj_6D6.js";import"./sphere-pyy1Q49L.js";import"./Query-DiXzFYuA.js";import{D as C,C as D}from"./I3SBinaryReader-CSQT2ZTV.js";import{g as R}from"./edgeUtils-CunSxVgF.js";import"./NormalAttribute.glsl-Bohc9iiA.js";import{I as _}from"./orientedBoundingBox-BNW6WbZn.js";n();var f;async function g(t,I,m,p,S,T,l,c){const a=[];for(const r of I)if(r&&S.includes(r.name)){const o=`${t}/nodes/${m}/attributes/${r.key}/0`;a.push({url:o,storageInfo:r})}const e=await Promise.allSettled(a.map(r=>N(r.url,{responseType:"array-buffer",query:{...l,token:T},signal:c?.signal}).then(o=>C(r.storageInfo,o.data)))),i=[];for(const r of p){const o={};for(let s=0;s<e.length;s++){const E=e[s];if(E.status==="fulfilled"){const u=E.value;o[a[s].storageInfo.name]=D(u,r)}}i.push(o)}return i}(function(t){t[t.OUTSIDE=0]="OUTSIDE",t[t.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",t[t.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",t[t.INSIDE=3]="INSIDE"})(f||(f={})),R({color:[0,0,0,0],opacity:0}),n(),n(),new _,new Array(72);export{g as B};
