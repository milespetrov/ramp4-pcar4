import{j as u,ad as y,eC as g,e4 as b,M as m,q as s,v as l,x as w}from"./main-Ca-A5Z1g.js";import{h as k}from"./UpdatingHandles-CdljVe37.js";import _ from"./GraphicsLayer-ClnMV2V-.js";import{h as v,d as f,S as M,b as B}from"./Stop-B-qTRXvo.js";import{k as S}from"./SketchViewModel-Dvo60lqu.js";import"./preload-helper-B76NpbEU.js";import"./GraphicsCollection-CY3rzuN3.js";import"./Layer-BNGt75Fg.js";import"./TimeExtent-HFiHTwFl.js";import"./BlendLayer-DlR6fYFg.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-B4ylAUeN.js";import"./parser-DDMH54JX.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DT64fCZI.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer--4ohcDPP.js";import"./ElevationInfo-B0ImkKsA.js";import"./lengthUtils-Bsiz_-ZM.js";import"./networkEnums-COOWneKR.js";import"./projectionUtils-DtAacSK2.js";import"./elevationInfoUtils-IzcKAPGS.js";import"./editableLayers-D6gjl4wC.js";import"./utils-C0dXIp4I.js";import"./Queue-d7Ab3olT.js";import"./Version-BaQGYAkl.js";import"./Cyclical-CPumsxPT.js";import"./quantityUtils-DyskS6Na.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./vec32-aPMwLHI2.js";import"./projectVectorToVector-CX6pFME9.js";import"./projectPointToVector-dMJlpKdJ.js";import"./geodesicUtils-BBakburg.js";import"./asyncUtils-BfzXpQxV.js";import"./Query-fq6LNV_8.js";import"./Field-DLGOe1__.js";import"./fieldType-C1kCYAVo.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./plane-CUkrc6Ue.js";import"./vectorStacks-DNvCdD4J.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-C8CPLgPg.js";import"./mat3-CruJiiUv.js";import"./geodeticLengthOperator-C_ZnjuvP.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-CIfoB4XU.js";import"./lineSegment-DwCtyuoD.js";import"./spatialReferenceEllipsoidUtils-DzWNBwdr.js";function c(e,r){e.networkFeature=r}function V(e){const r=p(e.graphic);return{...e,networkFeature:r}}function L(e){const r=e.graphics.map(t=>p(t));return{...e,networkFeatures:r}}function p(e){return e.networkFeature}function F(e){return e?.type==="point"||e?.type==="polyline"||e?.type==="polygon"}let a=class extends u{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async r=>{switch(r.type){case"update":switch(r.state){case"active":case"complete":for(const t of r.graphics)p(t).geometry=F(t.geometry)?t.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const t of r.graphics){const o=p(t);this._removeNetworkFeature(o)}break;case"create":if(r.graphic&&r.state==="complete"&&this._createMode){const t=r.graphic.geometry?.clone(),o=r.graphic.symbol?.clone();if(!t)break;switch(this._createMode){case"stop":{if(t.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:n})=>!n)){i.at(0).geometry=t;break}if(i.length>1&&i.filter((n,d)=>d!==0).every(({geometry:n})=>!n)){i.at(1).geometry=t;break}const h=new B({geometry:t});i.add(h),c(r.graphic,h);break}case"point-barrier":{if(t.type!=="point")break;const i=new M({geometry:t,symbol:o});this.layer.pointBarriers.add(i),c(r.graphic,i);break}case"polyline-barrier":{if(t.type!=="polyline")break;const i=new f({geometry:t,symbol:o});this.layer.polylineBarriers.add(i),c(r.graphic,i);break}case"polygon-barrier":{if(t.type!=="polygon")break;const i=new v({geometry:t,symbol:o});this.layer.polygonBarriers.add(i),c(r.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(r.type,r.type==="create"?V(r):L(r))}}initialize(){this._sketchViewModel=new S({layer:this._graphicsLayer,view:this.view}),this.addHandles([y(()=>this.enabled,e=>{e?this._activate():this._deactivate()},b),y(()=>{const{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:o}=this.layer;return{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),g(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=m(this._graphicsLayer),this._sketchViewModel=m(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(e=>p(e))}get updating(){return this._updatingHandles.updating}create(e){switch(this._createMode=e,e){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const r=this._graphicsLayer.graphics.find(t=>p(t)===e);r&&this._graphicsLayer.remove(r),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(r=>r.toArray().map(t=>{const o=t.toGraphic();return o.networkFeature=t,o}));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};s([l()],a.prototype,"enabled",void 0),s([l({constructOnly:!0})],a.prototype,"layer",void 0),s([l({readOnly:!0})],a.prototype,"selectedNetworkFeatures",null),s([l()],a.prototype,"updating",null),s([l({constructOnly:!0})],a.prototype,"view",void 0),a=s([w("esri.views.2d.layers.support.RouteLayerInteraction")],a);export{a as RouteLayerInteraction};
