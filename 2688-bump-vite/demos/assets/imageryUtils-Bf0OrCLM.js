import{P as p,$ as n}from"./utils-pPjGp9lz.js";import{t as c}from"./datasetUtils-ClwgIpwT.js";import{l as u,c as g,u as v,E as s}from"./portalItemUtils-BIls_zW7.js";import"./main-Ca-A5Z1g.js";import"./preload-helper-B76NpbEU.js";import"./originUtils-CPX8CCAY.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./PortalItem-BxaiRXOp.js";import"./jsonContext-D9ZyPmqv.js";import"./saveUtils-DXzfWvb1.js";import"./Field-DLGOe1__.js";import"./fieldType-C1kCYAVo.js";import"./projectionUtils-DtAacSK2.js";const m="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",T="imagery-tile-layer-save",I="imagery-tile-layer-save-as",y="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function o(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,t=c(r)[0];return{isValid:t?.datasetFormat==="RasterTileServer"&&(t.tileType==="Raster"||t.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function l(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function A(e,r){const{parsedUrl:t,title:a,fullExtent:i}=e;r.url=t.path,r.title||=a;try{r.extent=await u(i)}catch{r.extent=void 0}g(r,s.METADATA),v(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function j(e,r){const t=e.type==="imagery"?f:e.type==="imagery-tile"?T:w,a=e.type==="wcs"?y:m;return p({layer:e,itemType:a,validateLayer:o,createItemData:l,errorNamePrefix:t},r)}async function k(e,r,t){const a=e.type==="imagery"?d:e.type==="imagery-tile"?I:x,i=e.type==="wcs"?y:m;return n({layer:e,itemType:i,validateLayer:o,createItemData:l,errorNamePrefix:a,newItem:r,setItemProperties:A},t)}export{j as save,k as saveAs};
