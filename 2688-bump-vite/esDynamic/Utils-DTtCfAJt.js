import{gL as C,i as k,s as _}from"./main-CA1CST7A.js";import{O as c,X as h}from"./enums-wEDHPbCF.js";import{L as B}from"./definitions-MCCItX4r.js";import{L as R}from"./enums-CaYjRB3Y.js";import{i as v}from"./BoundingBox-DlCd_wcU.js";import{s as O}from"./getDataTypeBytes-DYbftOSj.js";import{t as z}from"./VertexElementDescriptor-DLvjNrmQ.js";let m=class g{static{this.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT}constructor(t,s,n,r,i,o,a){this.instanceId=t,this.textureKey=s,this.indexStart=n,this.indexCount=r,this.vertexStart=i,this.vertexCount=o,this.overlaps=a}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new g(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,s,n,r,i,o,a,u){t.push(s),t.push(n),t.push(r),t.push(i),t.push(o),t.push(a),t.push(u)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const s=t.readInt32(),n=t.readInt32(),r=t.readInt32(),i=t.readInt32(),o=t.readInt32(),a=t.readInt32(),u=t.readInt32();return new g(s,n,r,i,o,a,u)}};function w(e,t){if(t!==null){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}function I(e,t,s){const n=e.readInt32(),r=new Array(n);for(let i=0;i<r.length;i++)r[i]=t.deserialize(e,s);return r}let H=class ${static{this.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+m.byteSizeHint}constructor(t,s){this.id=t,this.sortKey=s,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),w(t,this.records),t}static deserialize(t){const s=t.readInt32(),n=t.readF32(),r=new $(s,n);return r.records=I(t,m)??[],r}};const S=new Float32Array(1),b=new Uint32Array(S.buffer);function N(e){return S[0]=e,b[0]}function D(e){return b[0]=e,S[0]}function G(e,t){return 65535&e|t<<16}function F(e){const t=N(e),s=t>>>31;let n=t>>>23&255,r=8388607&t;return n-=127,n>15?s<<15|31744:n<-25?0:(n<-14&&(r+=8388608,r/=2**(-14-n),n=-15),n+=15,r/=8192,r=V(r,1023),s<<15|n<<10|r)}function V(e,t){const s=Math.floor(e),n=e-s;return s<t&&(n>.5||n===.5&&s%2==1)?s+1:s}function P(e){let t=e>>>15,s=e>>10&31,n=1023&e;return t=t?-1:1,s-=15,n/=1024,s>-15?n+=1:s=-14,t*2**s*n}function X(e){const t=e.map(({name:s,count:n,type:r})=>`${s}.${n}.${r}`).join(",");return C(t)}function l(e,t,s,n,r,i,o){if(e.primitiveName===t){let a=n?.readWithDefault(r,i,e[s]&&o);return e.type==="text"&&(a=a.toString()),void(e[s]=a)}if("type"in e&&e.type!=null){if(e.effects)for(const a of e.effects)l(a,t,s,n,r,i,o);switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.symbolLayers)for(const a of e.symbolLayers)l(a,t,s,n,r,i,o);break;case"CIMTextSymbol":e.symbol&&l(e.symbol,t,s,n,r,i,o);break;case"CIMHatchFill":e.lineSymbol&&l(e.lineSymbol,t,s,n,r,i,o);break;case"CIMPictureMarker":case"CIMCharacterMarker":case"CIMVectorMarker":if(e.markerPlacement&&l(e.markerPlacement,t,s,n,r,i,o),e.type==="CIMVectorMarker"&&e.markerGraphics)for(const a of e.markerGraphics)l(a,t,s,n,r,i,o),l(a.symbol,t,s,n,r,i,o)}}}const K=400;function Z(e){const t=Math.max(1.25*e.width,20);return e.effects!=null&&e.effects.length>0?K:t}function j(e,t,s,n){const r=s.packPrecisionFactor??1;switch(s.type){case c.BYTE:if(s.count===1)e.setInt8(n+s.offset,t*r);else for(let i=0;i<s.count;i++){const o=i*Int8Array.BYTES_PER_ELEMENT;e.setInt8(n+s.offset+o,t[i]*r)}break;case c.UNSIGNED_BYTE:if(s.count===1)e.setUint8(n+s.offset,t*r);else for(let i=0;i<s.count;i++){const o=i*Uint8Array.BYTES_PER_ELEMENT;e.setUint8(n+s.offset+o,t[i]*r)}break;case c.SHORT:if(s.count===1)e.setInt16(n+s.offset,t*r,!0);else for(let i=0;i<s.count;i++){const o=i*Int16Array.BYTES_PER_ELEMENT;e.setInt16(n+s.offset+o,t[i]*r,!0)}break;case c.UNSIGNED_SHORT:if(s.count===1)e.setUint16(n+s.offset,t*r,!0);else for(let i=0;i<s.count;i++){const o=i*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+s.offset+o,t[i]*r,!0)}break;case c.INT:if(s.count===1)e.setInt32(n+s.offset,t*r,!0);else for(let i=0;i<s.count;i++){const o=i*Int32Array.BYTES_PER_ELEMENT;e.setInt32(n+s.offset+o,t[i]*r,!0)}break;case c.UNSIGNED_INT:if(s.count===1)e.setUint32(n+s.offset,t*r,!0);else for(let i=0;i<s.count;i++){const o=i*Uint32Array.BYTES_PER_ELEMENT;e.setUint32(n+s.offset+o,t[i]*r,!0)}break;case c.FLOAT:if(s.count===1)e.setFloat32(n+s.offset,t*r,!0);else for(let i=0;i<s.count;i++){const o=i*Float32Array.BYTES_PER_ELEMENT;e.setFloat32(n+s.offset+o,t[i]*r,!0)}break;case c.HALF_FLOAT:if(s.count===1)e.setUint16(n+s.offset,F(t*r),!0);else for(let i=0;i<s.count;i++){const o=i*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+s.offset+o,F(t[i]*r),!0)}}}function W(e,t,s){switch(t.type){case c.BYTE:{if(t.count===1)return e.getInt8(s+t.offset);const n=[];for(let r=0;r<t.count;r++){const i=r*Int8Array.BYTES_PER_ELEMENT;n.push(e.getInt8(s+t.offset+i))}return n}case c.UNSIGNED_BYTE:{if(t.count===1)return e.getUint8(s+t.offset);const n=[];for(let r=0;r<t.count;r++){const i=r*Uint8Array.BYTES_PER_ELEMENT;n.push(e.getUint8(s+t.offset+i))}return n}case c.SHORT:{if(t.count===1)return e.getInt16(s+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const i=r*Int16Array.BYTES_PER_ELEMENT;n.push(e.getInt16(s+t.offset+i,!0))}return n}case c.UNSIGNED_SHORT:{if(t.count===1)return e.getUint16(s+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const i=r*Uint16Array.BYTES_PER_ELEMENT;n.push(e.getUint16(s+t.offset+i,!0))}return n}case c.INT:{if(t.count===1)return e.getInt32(s+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const i=r*Int32Array.BYTES_PER_ELEMENT;n.push(e.getInt32(s+t.offset+i,!0))}return n}case c.UNSIGNED_INT:{if(t.count===1)return e.getUint32(s+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const i=r*Uint32Array.BYTES_PER_ELEMENT;n.push(e.getUint32(s+t.offset+i,!0))}return n}case c.FLOAT:{if(t.count===1)return e.getFloat32(s+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const i=r*Float32Array.BYTES_PER_ELEMENT;n.push(e.getFloat32(s+t.offset+i,!0))}return n}case c.HALF_FLOAT:{if(t.count===1)return P(e.getUint16(s+t.offset,!0));const n=[];for(let r=0;r<t.count;r++){const i=r*Uint16Array.BYTES_PER_ELEMENT;n.push(P(e.getUint16(s+t.offset+i,!0)))}return n}}}const U=2;class M{constructor(t,s,n,r,i,o,a,u,d,f,E=[],p=0,y=0){this.displayId=t,this.labelClassId=s,this.hash=n,this.anchorX=r,this.anchorY=i,this.directionX=o,this.directionY=a,this.maxScale=u,this.minScale=d,this.referenceBounds=f,this.bounds=E,this.recordStart=p,this.recordCount=y,this.priority=0,this._colliders=null,this.uniqueSymbol=null,this.selectedForRendering=!1}get xTile(){return this.anchorX}get yTile(){return this.anchorY}colliders(t){if(!this._colliders){const s=t.attributeView,n=B;let r=this.referenceBounds?.size??0;const i=t.layerView.labelingCollisionInfos[0].vvEvaluators[0];if(i!=null){const f=i(s.getVisualVariableData(this.displayId,R.SIZE));r=isNaN(f)||f==null||f===1/0?r:f}const o=this.minScale?t.layerView.view.featuresTilingScheme.scaleToZoom(this.minScale):0,a=this.maxScale?t.layerView.view.featuresTilingScheme.scaleToZoom(this.maxScale):25,u=this.directionX*(n+r/2),d=this.directionY*(n+r/2);this._colliders=this.bounds.map(f=>({xTile:this.anchorX,yTile:this.anchorY,dxPixels:f.x-f.halfWidth+u,dyPixels:f.y-f.halfHeight+d,hard:!0,partIndex:1,width:f.width+U,height:f.height+U,angle:0,xScreen:0,yScreen:0,dxScreen:0,dyScreen:0,enabled:!0,minLod:o,maxLod:a}))}return this._colliders}get id(){return this.displayId}serialize(t){t.push(this.displayId),t.push(this.labelClassId),t.push(this.hash),t.push(this.recordStart),t.push(this.recordCount),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds?(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)):(t.writeF32(0),t.writeF32(0),t.writeF32(0)),w(t,this.bounds)}static deserialize(t){const s=t.readInt32(),n=t.readInt32(),r=t.readInt32(),i=t.readInt32(),o=t.readInt32(),a=t.readF32(),u=t.readF32(),d=t.readF32(),f=t.readF32(),E=t.readF32(),p=t.readF32(),y=t.readF32(),A=t.readF32(),L=t.readF32(),Y=I(t,v)??[];return new M(s,n,r,a,u,d,f,E,p,{size:y,offsetX:A,offsetY:L},Y,i,o)}}const x=()=>k.getLogger("esri.views.2d.engine.webgl.Utils");function q(e){switch(e){case h.UNSIGNED_BYTE:return 1;case h.UNSIGNED_SHORT_4_4_4_4:return 2;case h.FLOAT:return 4;default:return void x().error(new _("webgl-utils",`Unable to handle type ${e}`))}}function J(e){switch(e){case h.UNSIGNED_BYTE:return Uint8Array;case h.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case h.FLOAT:return Float32Array;default:return void x().error(new _("webgl-utils",`Unable to handle type ${e}`))}}function Q(e){const t=new Map;for(const s in e){const n=e[s];let r=0;t.set(s,n.map(i=>{const o=new z(i.name,i.count,i.type,r,0,i.normalized||!1);return r+=i.count*O(i.type),o})),t.get(s).forEach(i=>i.stride=r)}return t}const tt=e=>{const t=new Map;for(const s in e)for(const n of e[s])t.set(n.name,n.location);return t},et=e=>{const t={};return e.forEach((s,n)=>t[n]=s?.length?s[0].stride:0),t},T=new Map,st=(e,t)=>{if(!T.has(e)){const s=Q(t),n={strides:et(s),bufferLayouts:s,attributes:tt(t)};T.set(e,n)}return T.get(e)},nt=e=>e.includes("data:image/svg+xml");function rt(e){const t=[];for(let s=0;s<e.length;s++)t.push(e.charCodeAt(s));return t}function it(e){if(e==null)return"";const{type:t}=e;switch(t){case"CIMMarkerPlacementAlongLineRandomSize":return`${t}-${e.seed}-${e.randomization}`;case"CIMMarkerPlacementAlongLineVariableSize":return`${t}-${e.maxRandomOffset}-${e.numberOfSizes}-${e.seed}-${e.variationMethod}`;case"CIMMarkerPlacementAtExtremities":return`${t}-${e.extremityPlacement}-${e.offsetAlongLine}`;case"CIMMarkerPlacementAtRatioPositions":return`${t}-${e.beginPosition}-${e.endPosition}-${e.flipFirst}-${JSON.stringify(e.positionArray)}`;case"CIMMarkerPlacementAtMeasuredUnits":return`${t}-${e.interval}-${e.skipMarkerRate}-${e.placeAtExtremities}`;case"CIMMarkerPlacementInsidePolygon":return`${t}-${e.stepX}-${e.stepY}-${e.randomness}-${e.gridType}-${e.seed}-${e.shiftOddRows}`;case"CIMMarkerPlacementOnLine":return`${t}-${e.relativeTo}-${e.startPointOffset}`;case"CIMMarkerPlacementOnVertices":return`${t}-${e.placeOnControlPoints}-${e.placeOnEndPoints}-${e.placeOnRegularVertices}`;case"CIMMarkerPlacementPolygonCenter":return`${t}-${e.method}`;default:return`${t}`}}export{st as $,m as a,N as b,W as c,G as d,I as e,j as f,Z as g,D as h,J as i,rt as j,nt as k,M as n,q as o,it as p,l as r,H as s,X as t};
