import{bU as y,bV as p}from"./main-D2DXv2EP.js";import{t as b}from"./CIMSymbolHelper-CjJrtKqv.js";import{CIMSymbolRasterizer as L}from"./CIMSymbolRasterizer-D-eMOzLl.js";import{OverrideHelper as R}from"./OverrideHelper-Bjkpw1m-.js";import{z as C}from"./utils-BV7DBUkI.js";import{l as U,t as M}from"./symbolUtils-BR3PafAa.js";import"./preload-helper-B76NpbEU.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CQwfjqQE.js";import"./OptimizedGeometry-DQo_XOvi.js";import"./memoryEstimations-Zcx-nUfB.js";import"./GeometryUtils-Bwz1KkGU.js";import"./enums-_AFKM9Yk.js";import"./defaultCIMValues-CQAn2izL.js";import"./definitions-CASyCajO.js";import"./rasterizingUtils-BxSHdatt.js";import"./floatRGBA-Cn_IbHPb.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat2df32-Dpt2CT5P.js";import"./vec2-ChnYg_BJ.js";import"./vec2f32-CaVKkSa6.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BSOANoLO.js";import"./CIMResourceManager-DKF4SXxW.js";import"./imageUtils-gyAK4VrC.js";import"./colorUtils-DBoBxV3q.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./FieldsIndex-CbJUHKVg.js";import"./UnknownTimeZone-CbSxOQGE.js";import"./timeZoneUtils-oBiiqaGs.js";import"./ArcadeExpression-CY2woUqd.js";import"./TimeOnly-fvoIc9hl.js";import"./enum-CKkkq3Au.js";import"./callExpressionWithFeature-CK2OoEJc.js";import"./quantizationUtils-BL8rtzF-.js";import"./utils-BABmyPaD.js";import"./asyncUtils-3fq1I4X_.js";import"./jsonUtils--BtnsI96.js";import"./parser-Dio4BcSc.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DU2V09gx.js";import"./cimSymbolUtils-D2EG_Xar.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./jsxFactory-BOWuXoS1.js";import"./intl-B50gXYgB.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./webStyleSymbolUtils-DfL-Iebv.js";import"./devEnvironmentUtils-8WtPGj6h.js";import"./styleUtils-C2VVNs5O.js";const u=new L(null),g=p(M.size),x=p(M.maxSize),S=p(M.lineWidth),q=1;async function D(m,t,a){const r=t?.size;let i=r!=null&&typeof r=="object"&&"width"in r?r.width:r,o=r!=null&&typeof r=="object"&&"height"in r?r.height:r;if(!i||!o)if(a==="esriGeometryPolygon")i=o=t.maxSize?Math.min(t.maxSize,g):g;else{const n=await E(m,t,a);n&&(i=n.width,o=n.height),a==="esriGeometryPolyline"&&(i=t.maxSize?Math.min(t.maxSize,S):S),i=i!=null&&isFinite(i)?Math.min(i,x):g,o=o!=null&&isFinite(o)?Math.max(Math.min(o,x),q):g}return t.style==="legend"&&a==="esriGeometryPolyline"&&(i=S),{width:i,height:o}}async function E(m,t={},a){const r=t.cimOptions||t;a??=r.geometryType||C(m?.data?.symbol);const{feature:i,fieldMap:o,viewParams:n}=r,l=await R.resolveSymbolOverrides(m.data,i,null,o,a,null,n);if(!l)return null;(m=m.clone()).data={type:"CIMSymbolReference",symbol:l},m.data.primitiveOverrides=void 0;const e=[];return b.fetchResources(l,u.resourceManager,e),b.fetchFonts(l,u.resourceManager,e),e.length>0&&await Promise.all(e),b.getEnvelope(l,null,u.resourceManager)}async function Et(m,t={}){const{node:a,opacity:r,symbolConfig:i}=t,o=i!=null&&typeof i=="object"&&"isSquareFill"in i&&i.isSquareFill,n=t.cimOptions||t,l=n.geometryType||C(m?.data?.symbol),e=await D(m,t,l),{feature:I,fieldMap:G}=n,O=t?.geometry||o||l!=="esriGeometryPolygon"?"preview":"legend";let v=e;const z=e;if(t?.geometry&&(l==="esriGeometryPolygon"||l==="esriGeometryPolyline")&&(y(e.width)<200||y(e.height)<200)){const j=e.width>e.height?p(200)*e.height/e.width:p(200);v={width:e.width>e.height?p(200):p(200)*e.width/e.height,height:j}}const d=await u.rasterizeCIMSymbolAsync(m,I,v,O,G,l,null,n.viewParams,n.allowScalingUp,t?.geometry?.toJSON());if(!d)return null;const{width:$,height:F}=d,h=document.createElement("canvas");h.width=$,h.height=F,h.getContext("2d").putImageData(d,0,0);const f=y(z.width),w=y(z.height),s=new Image(f,w);s.src=h.toDataURL(),s.ariaLabel=t.ariaLabel??null,s.alt=t.ariaLabel??"",r!=null&&(s.style.opacity=`${r}`);let c=s;if(t.effectView!=null){const P={shape:{type:"image",x:0,y:0,width:f,height:w,src:s.src},fill:null,stroke:null,offset:[0,0]};c=U([[P]],[f,w],t)}return a&&c&&a.appendChild(c),c}export{E as getCIMSymbolPreviewSize,Et as previewCIMSymbol};
