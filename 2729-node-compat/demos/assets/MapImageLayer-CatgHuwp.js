const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./mapImageLayerUtils-B96snoSi.js","./utils-B2dWWwcR.js","./main-D2DXv2EP.js","./preload-helper-B76NpbEU.js","./main-B_8sIZOq.css","./originUtils-CPX8CCAY.js","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./PortalItem-CvSB4NtX.js","./jsonContext-Bc_jBoY_.js","./portalItemUtils-CgqNRiEn.js","./projectionUtils-CSGXOOi6.js","./saveUtils-Dfl4P16e.js"])))=>i.map(i=>d[i]);
import{_ as w}from"./preload-helper-B76NpbEU.js";import{c6 as O,o as _,b8 as v,c7 as f,c8 as $,$ as g,b_ as E,s as b,O as P,q as i,v as p,H as T,G as A,x as L,bX as F}from"./main-D2DXv2EP.js";import{t as M}from"./loadAll-Dc1dfu6B.js";import{S as R}from"./MultiOriginJSONSupport-oElDQLo1.js";import{i as j}from"./scaleUtils-CmOnRfCV.js";import{h as V}from"./Layer-CizdWS3L.js";import{i as N}from"./APIKeyMixin-B7k0gjH8.js";import{m as q,f as J,a as U}from"./SublayersOwner-B94tGnzv.js";import{l as k}from"./ArcGISService-CdFXtD63.js";import{p as z}from"./BlendLayer-BJq8gjUB.js";import{e as G}from"./CustomParametersMixin-41dPIMix.js";import{b as H,y as W}from"./OperationalLayer-CRXzmr5r.js";import{j as D}from"./PortalLayer-N4yPWtQf.js";import{f as Z}from"./RefreshableLayer-DzJugc7_.js";import{t as B}from"./ScaleRangeLayer-Cz_dpk-9.js";import{c as C}from"./TemporalLayer-DxZedqkq.js";import{y as K}from"./ExportImageParameters-DOycooQa.js";import{t as X}from"./imageBitmapUtils-Ag3hOfwx.js";import{e as S}from"./sublayerUtils-DxKMEpj2.js";import{t as Q}from"./versionUtils-DO3oIm-r.js";import{c as Y}from"./ElevationInfo-D7a1yjbR.js";import{u as ee}from"./TimeExtent-CVPp9ur0.js";import{a as x}from"./timeZoneUtils-oBiiqaGs.js";import{A as y}from"./interfaces-CL2NbQte.js";import"./asyncUtils-3fq1I4X_.js";import"./Version-Cg3iWa83.js";import"./portalItemUtils-CgqNRiEn.js";import"./projectionUtils-CSGXOOi6.js";import"./CollectionFlattener-BUVuiMXf.js";import"./QueryTask-B-jGc07S.js";import"./infoFor3D-DhzudQro.js";import"./Query-CgJB-VmI.js";import"./Field-DVihpC0x.js";import"./fieldType-Css-NWey.js";import"./utils-C9AGW0-A.js";import"./executeForIds-DyEScTmK.js";import"./query-5NkskCFS.js";import"./normalizeUtils-DBnF8ZTi.js";import"./normalizeUtilsCommon-C_Gu2T80.js";import"./utils-CLt50LuM.js";import"./pbfQueryUtils-Cvyd6NRz.js";import"./pbf-DdS5TD4L.js";import"./memoryEstimations-Zcx-nUfB.js";import"./OptimizedGeometry-DQo_XOvi.js";import"./OptimizedFeature-PlA_VTgu.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-CKHllaWx.js";import"./executeQueryPBF-BvugfS1d.js";import"./featureConversionUtils-DOZMEt9J.js";import"./FeatureSet-D_6w_vTZ.js";import"./executeQueryJSON-BHBgxZF9.js";import"./OrderedLayer-KFs8_ynl.js";import"./OrderByInfo-CmnE-LQD.js";import"./labelingInfo-BRWDLWet.js";import"./uuid-Cl5lrJ4c.js";import"./SimpleRenderer-Bh5OMS9N.js";import"./commonProperties-DWGbfn39.js";import"./colorRamps-O666ld6v.js";import"./ColorStop-DD7CkP22.js";import"./visualVariableUtils-M_8_bsC3.js";import"./lengthUtils-BCkAUmbc.js";import"./UniqueValueRenderer-DpdqFYJB.js";import"./diffUtils-C9A-wa2w.js";import"./RendererLegendOptions-6kBP670j.js";import"./styleUtils-C2VVNs5O.js";import"./RelationshipQuery-3NMRO1-c.js";import"./NormalizationBinParametersMixin-DW3bPrde.js";import"./labelUtils-CBX0bdDY.js";import"./FeatureType-BTJ4dDby.js";import"./FeatureTemplate-CB65_CDp.js";import"./FieldsIndex-CbJUHKVg.js";import"./UnknownTimeZone-CbSxOQGE.js";import"./LayerFloorInfo-CueiaJ2k.js";import"./Relationship-ClwNrhrt.js";import"./serviceCapabilitiesUtils-DnP9J_5S.js";import"./typeUtils-1b7ZnYIT.js";import"./ClassBreaksRenderer-2nCw2_gR.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-IFCIbIKv.js";import"./ArcadeExpression-CY2woUqd.js";import"./TimeOnly-fvoIc9hl.js";import"./enum-CKkkq3Au.js";import"./utils-BV7DBUkI.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-Cm8R_Sh1.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./popupUtils-vExcMAic.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils--BtnsI96.js";import"./parser-Dio4BcSc.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DU2V09gx.js";import"./PortalItem-CvSB4NtX.js";import"./TimeInfo-DxRS460y.js";import"./floorFilterUtils-DKzVzLpH.js";let r=class extends z(C(B(q(J(k(H(D(R(Z(N(G(V)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new K({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new Y({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=O(async(t,m,a)=>{const{save:n,saveAs:s}=await w(()=>import("./mapImageLayerUtils-B96snoSi.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]),import.meta.url);switch(t){case y.SAVE:return n(this,m);case y.SAVE_AS:return s(this,a,m)}})}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(_).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const m=t.supportedImageFormatTypes;return m&&m.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,m,a){if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(({sublayers:o})=>o&&o.toArray().reverse()).toArray();let s=!1;const l=v(a.origin);let u;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(l===f.PORTAL_ITEM){const o=this.createSublayersForOrigin("service").sublayers;s=S(n,o,f.SERVICE)}else if(l>f.PORTAL_ITEM){const o=this.createSublayersForOrigin("portal-item");s=S(n,o.sublayers,v(o.origin)),u=o.originWithPartialOverrides}}const c=[],d={writeSublayerStructure:s,...a,minimumWritableOrigin:u};let h=s||this.hasVisibleLayersForOrigin(l);n.forEach(o=>{const I=o.write({},d);c.push(I),h=h||o.originOf("visible")==="user"}),c.some(o=>Object.keys(o).length>1)&&(t.layers=c),h&&(t.visibleLayers=n.filter(o=>o.visible).map(o=>o.id))}createExportImageParameters(e,t,m,a){const n=a?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=a?.floors??null,this._exportImageParameters.scale=j({extent:e,width:t})*n;const s=this._exportImageParameters.toJSON(),l=!a?.rotation||this.version<10.3?{}:{rotation:-a.rotation},u=e?.spatialReference,c=$(u);s.dpi*=n;const d={};if(a?.timeExtent){const{start:h,end:o}=a.timeExtent.toJSON();d.time=h&&o&&h===o?""+h:`${h??"null"},${o??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(d.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:c,imageSR:c,size:t+","+m,...s,...l,...d}}async fetchImage(e,t,m,a){const{data:n}=await this._fetchImage("image",e,t,m,a);return n}async fetchImageBitmap(e,t,m,a){const{data:n,url:s}=await this._fetchImage("blob",e,t,m,a);return X(n,s,a?.signal)}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:m}=await g(this.url,t),{extent:a,fullExtent:n,timeExtent:s}=m,l=a||n;return{fullExtent:l&&E.fromJSON(l),timeExtent:s&&ee.fromJSON({start:s[0],end:s[1]})}}loadAll(){return M(this,e=>{e(this.allSublayers),e(this.subtables)})}async save(e){return this._debouncedSaveOperations(y.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(y.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return Q(this,e)}async _fetchImage(e,t,m,a,n){const s={responseType:e,signal:n?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,m,a,n),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(s.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:s.query});try{const{data:u}=await g(l,s);return{data:u,url:l}}catch(u){throw P(u)?u:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:u})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:m}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});m&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(e==null||!this.sublayersSourceJSON[e]?.visibleLayers)}};i([p(x("dateFieldsTimeReference"))],r.prototype,"dateFieldsTimeZone",void 0),i([p({type:Boolean})],r.prototype,"datesInUnknownTimezone",void 0),i([p()],r.prototype,"dpi",void 0),i([p()],r.prototype,"elevationInfo",void 0),i([p()],r.prototype,"gdbVersion",void 0),i([p()],r.prototype,"imageFormat",void 0),i([T("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),i([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],r.prototype,"imageMaxHeight",void 0),i([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],r.prototype,"imageMaxWidth",void 0),i([p()],r.prototype,"imageTransparency",void 0),i([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],r.prototype,"isReference",void 0),i([p({json:{read:!1,write:!1}})],r.prototype,"labelsVisible",void 0),i([p({type:["ArcGISMapServiceLayer"]})],r.prototype,"operationalLayerType",void 0),i([p({json:{read:!1,write:!1}})],r.prototype,"popupEnabled",void 0),i([p(x("preferredTimeReference"))],r.prototype,"preferredTimeZone",void 0),i([p()],r.prototype,"sourceJSON",void 0),i([p({json:{write:{ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),i([A("sublayers",{layers:{type:[U]},visibleLayers:{type:[F]}})],r.prototype,"writeSublayers",null),i([p({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],r.prototype,"listMode",void 0),i([p({json:{read:!1},readOnly:!0,value:"map-image"})],r.prototype,"type",void 0),i([p(W)],r.prototype,"url",void 0),r=i([L("esri.layers.MapImageLayer")],r);const Dt=r;export{Dt as default};
