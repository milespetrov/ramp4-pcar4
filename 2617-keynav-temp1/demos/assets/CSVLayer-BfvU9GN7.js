import{p as v,c6 as w,b_ as S,aq as O,q as i,v as r,x as d,I as b,o as F,a$ as q,s as m,H as I,gc as N,bc as _}from"./main-sd5p277L.js";import J from"./FeatureLayer-CzrjYyD_.js";import{p as x}from"./workers-xt22mj1y.js";import{g as C}from"./FeatureSet-PlTFhS-h.js";import{y as P}from"./clientSideDefaults-D_fepG3x.js";import{R as l}from"./Query-bESIdr_1.js";import"./preload-helper-DMGCcr4D.js";import"./MultiOriginJSONSupport-FOIFpQS8.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-DEZmonk4.js";import"./Field-CaaanqEX.js";import"./fieldType-B-RCmTdE.js";import"./HeightModelInfo-DKlQFyin.js";import"./OperationalLayer-BVLE-_3D.js";import"./ElevationInfo-CPMvfv93.js";import"./lengthUtils-gPRYSSfA.js";import"./TimeExtent-DnrKMh6k.js";import"./timeZoneUtils-QGFBMkxv.js";import"./labelingInfo-BEOv3KeO.js";import"./asyncUtils-DfrFNCJz.js";import"./uuid-Cl5lrJ4c.js";import"./SimpleRenderer-60xO1LKq.js";import"./commonProperties-GALU1Z9a.js";import"./colorRamps-KEYYy8Hh.js";import"./ColorStop-CYLYxLh7.js";import"./visualVariableUtils-DeFHGJvw.js";import"./UniqueValueRenderer-ocvj8pin.js";import"./diffUtils-zClmT7z5.js";import"./RendererLegendOptions-DYpVrnhT.js";import"./styleUtils-1NIlAU6P.js";import"./RelationshipQuery-CNVxVuQ9.js";import"./NormalizationBinParametersMixin-Hc044ol-.js";import"./labelUtils-CDiKlEzV.js";import"./LayerFloorInfo-CIzCBqiZ.js";import"./Relationship-hSWZzMmc.js";import"./serviceCapabilitiesUtils-CuqyNPJP.js";import"./infoFor3D-DhzudQro.js";import"./portalItemUtils-CGiMqg3m.js";import"./projectionUtils-YoY2-uBy.js";import"./Layer-CNbJOlji.js";import"./editsZScale-BEnZQ_dv.js";import"./queryZScale-BHo6klB_.js";import"./APIKeyMixin-B--MVy4a.js";import"./ArcGISService-B433Jgw9.js";import"./BlendLayer-CEfHtZ7g.js";import"./jsonUtils-BqIUBcC0.js";import"./parser-RcR_0rjG.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-BTCsfde8.js";import"./common-DQOJ18NT.js";import"./CustomParametersMixin-WChGxXDP.js";import"./DisplayFilteredLayer-DUZhO4oV.js";import"./scaleUtils-Dc-MwTq0.js";import"./displayFilterUtils-BpzYROYA.js";import"./EditBusLayer-CxXIWcGB.js";import"./FeatureEffectLayer-IoueTxhQ.js";import"./FeatureEffect-DWEAQxEU.js";import"./FeatureFilter-Bgl3dV-Y.js";import"./FeatureReductionLayer-BRWI7jGp.js";import"./FeatureReductionSelection-DO2Wjoxg.js";import"./jsonUtils-DUUy_coi.js";import"./typeUtils-C2H2-fCG.js";import"./ClassBreaksRenderer-DG1kOAXU.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-DAyC_LPX.js";import"./Version-CKvycuzA.js";import"./FieldsIndex-DHFmwGkQ.js";import"./UnknownTimeZone-BUb_poPp.js";import"./ArcadeExpression-CIOzrota.js";import"./TimeOnly-CgT5LJlS.js";import"./enum-C7MnKeCi.js";import"./utils-jjGHTGcN.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-D5ZAQtLT.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./MD5-MtSiOt06.js";import"./OrderedLayer-gFVGr_4a.js";import"./OrderByInfo-C0djhtM9.js";import"./PortalLayer-Ch3QSdUT.js";import"./PortalItem-B-S3w0_X.js";import"./RefreshableLayer-B_V1_J0u.js";import"./ScaleRangeLayer-C_ht83ld.js";import"./TemporalLayer-CA_H6Uq6.js";import"./TimeInfo-4DeFFKFx.js";import"./TrackableLayer-DbBfoJ8W.js";import"./FeatureTemplate-BbgogczH.js";import"./FeatureType-HhbDdcGe.js";import"./fieldProperties-HK6iwA70.js";import"./TitleCreator-CRhH3o0j.js";import"./versionUtils-p3iL_-Ce.js";import"./styleUtils-CPeu2NcM.js";import"./popupUtils-NHlSBpnL.js";import"./interfaces-CL2NbQte.js";import"./Queue-CIPCogvL.js";import"./intl-BjGjKuB_.js";import"./QueryEngineCapabilities-CsRUnGk7.js";let a=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:s,timeExtent:n}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return C.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:S.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async queryAttributeBins(t,e={}){return await this.load(),this._connection.invoke("queryAttributeBins",t?t.toJSON():null,e)}async _startWorker(t){this._connection=await x("CSVSourceWorker",{strategy:O("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:n,latitudeField:c,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:n?.map(g=>g.toJSON()),latitudeField:c,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],a.prototype,"type",void 0),i([r()],a.prototype,"loadOptions",void 0),i([r()],a.prototype,"customParameters",void 0),i([r()],a.prototype,"locationInfo",void 0),i([r()],a.prototype,"sourceJSON",void 0),i([r()],a.prototype,"delimiter",void 0),a=i([d("esri.layers.graphics.sources.CSVSource")],a);function u(t,e){throw new m(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=P(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=b.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(F).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=q(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}async queryObjectIds(t,e){return await this.load(),this.source.queryObjectIds(l.from(t)||this.createQuery())}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new m("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return u(this,"csv-layer:save")}async saveAs(t,e){return u(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([I("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:a,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:_,write:{isRequired:!0,ignoreOrigin:!0,writer:N}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const Fe=o;export{Fe as default};
