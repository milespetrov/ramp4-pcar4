import{o as _,I as v,a$ as S,$ as c,cb as T,s as u,J as b,bv as w,cc as $,cd as O,q as o,v as a,H as R,G as W,ce as U,x as I}from"./main-sd5p277L.js";import{t as P}from"./loadAll-UZE5Eg73.js";import{S as j}from"./MultiOriginJSONSupport-FOIFpQS8.js";import{h as L}from"./Layer-CNbJOlji.js";import{i as A}from"./APIKeyMixin-B--MVy4a.js";import{p as B}from"./ArcGISCachedService-QTKG7S5N.js";import{m as M,f as N,a as k}from"./SublayersOwner-BJNCsvpp.js";import{l as C}from"./ArcGISService-B433Jgw9.js";import{p as D}from"./BlendLayer-CEfHtZ7g.js";import{e as J}from"./CustomParametersMixin-WChGxXDP.js";import{b as q,y as G}from"./OperationalLayer-BVLE-_3D.js";import{j as V}from"./PortalLayer-Ch3QSdUT.js";import{f as x}from"./RefreshableLayer-B_V1_J0u.js";import{t as E}from"./ScaleRangeLayer-C_ht83ld.js";import{o as y}from"./imageBitmapUtils-CFEiaWLK.js";import{c as H}from"./ElevationInfo-CPMvfv93.js";import"./preload-helper-DMGCcr4D.js";import"./asyncUtils-DfrFNCJz.js";import"./TimeExtent-DnrKMh6k.js";import"./TileInfo-BGkWrkjx.js";import"./TileKey-DZd6gJy7.js";import"./TileInfoTilemapCache-D33pZmOu.js";import"./TilemapCache-DZj-wkKQ.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./memoryEstimations-DmReb2bu.js";import"./Version-CKvycuzA.js";import"./portalItemUtils-CGiMqg3m.js";import"./projectionUtils-YoY2-uBy.js";import"./CollectionFlattener-CNpNUqT6.js";import"./QueryTask-B14Bista.js";import"./infoFor3D-DhzudQro.js";import"./Query-bESIdr_1.js";import"./Field-CaaanqEX.js";import"./fieldType-B-RCmTdE.js";import"./utils-DFkyrlhn.js";import"./executeForIds-BN_UAl23.js";import"./query-CcEZAzgc.js";import"./normalizeUtils-B38FnQ21.js";import"./normalizeUtilsCommon-CvkpMcSC.js";import"./utils-rq89WWSI.js";import"./pbfQueryUtils-B6jKNT6D.js";import"./pbf-Dxb6ZV_L.js";import"./OptimizedGeometry-Djtue-Ke.js";import"./OptimizedFeature-Bxfhjbxm.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-BHo6klB_.js";import"./executeQueryPBF-CQt3dOOz.js";import"./featureConversionUtils-BqVdinU0.js";import"./FeatureSet-PlTFhS-h.js";import"./executeQueryJSON-Cf5qvJXA.js";import"./OrderedLayer-gFVGr_4a.js";import"./OrderByInfo-C0djhtM9.js";import"./labelingInfo-BEOv3KeO.js";import"./uuid-Cl5lrJ4c.js";import"./SimpleRenderer-60xO1LKq.js";import"./commonProperties-GALU1Z9a.js";import"./colorRamps-KEYYy8Hh.js";import"./ColorStop-CYLYxLh7.js";import"./visualVariableUtils-DeFHGJvw.js";import"./lengthUtils-gPRYSSfA.js";import"./UniqueValueRenderer-ocvj8pin.js";import"./diffUtils-zClmT7z5.js";import"./RendererLegendOptions-DYpVrnhT.js";import"./styleUtils-1NIlAU6P.js";import"./RelationshipQuery-CNVxVuQ9.js";import"./NormalizationBinParametersMixin-Hc044ol-.js";import"./labelUtils-CDiKlEzV.js";import"./FeatureType-HhbDdcGe.js";import"./FeatureTemplate-BbgogczH.js";import"./FieldsIndex-DHFmwGkQ.js";import"./UnknownTimeZone-BUb_poPp.js";import"./timeZoneUtils-QGFBMkxv.js";import"./LayerFloorInfo-CIzCBqiZ.js";import"./Relationship-hSWZzMmc.js";import"./serviceCapabilitiesUtils-CuqyNPJP.js";import"./typeUtils-C2H2-fCG.js";import"./ClassBreaksRenderer-DG1kOAXU.js";import"./DictionaryScriptEvaluator-DAyC_LPX.js";import"./ArcadeExpression-CIOzrota.js";import"./TimeOnly-CgT5LJlS.js";import"./enum-C7MnKeCi.js";import"./utils-jjGHTGcN.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-D5ZAQtLT.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./popupUtils-NHlSBpnL.js";import"./sublayerUtils-CD8zD4TW.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-BqIUBcC0.js";import"./parser-RcR_0rjG.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-BTCsfde8.js";import"./PortalItem-B-S3w0_X.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends D(E(M(B(N(q(V(C(j(x(A(J(L)))))))))))){constructor(...e){super(...e),this.listMode="show",this.elevationInfo=new H({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(_).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&v.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).toArray(),l=[],m={writeSublayerStructure:!1,...s};p.forEach(n=>{const h=n.write({},m);l.push(h)}),l.some(n=>Object.keys(n).length>1)&&(r.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>S(r).path):null}fetchTile(e,r,t,s={}){const{signal:p}=s,l=this.getTileUrl(e,r,t),m={responseType:"image",signal:p,query:{...this.refreshParameters}};return c(l,m).then(n=>n.data)}async fetchImageBitmapTile(e,r,t,s={}){const{signal:p}=s;if(this.fetchTile!==d.prototype.fetchTile){const h=await this.fetchTile(e,r,t,s);return y(h,e,r,t,p)}const l=this.getTileUrl(e,r,t),m={responseType:"blob",signal:p,query:{...this.refreshParameters}},{data:n}=await c(l,m);return y(n,e,r,t,p)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,p=T({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${p?"?"+p:""}`}loadAll(){return P(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const s=b(this.parsedUrl.path);if(s!=null&&s.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!w(t))return this._fetchServerVersion(t,e).then(s=>{this.read({currentVersion:s})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!$(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(s=>{if(s.data?.currentVersion)return s.data.currentVersion;throw new u("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,s=f.length;t<s;t++)if(r=f[t],r.toLowerCase().includes(e))return O("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};o([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),o([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),o([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),o([a()],i.prototype,"elevationInfo",void 0),o([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),o([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([a({type:Boolean})],i.prototype,"resampling",void 0),o([a()],i.prototype,"sourceJSON",void 0),o([a({type:v})],i.prototype,"spatialReference",void 0),o([R("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),o([a({readOnly:!0})],i.prototype,"sublayers",void 0),o([W("sublayers",{layers:{type:[k]}})],i.prototype,"writeSublayers",null),o([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),o([a()],i.prototype,"tileServers",null),o([U("tileServers")],i.prototype,"castTileServers",null),o([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),o([a(G)],i.prototype,"url",void 0),i=d=o([I("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const kr=i;export{kr as default};
