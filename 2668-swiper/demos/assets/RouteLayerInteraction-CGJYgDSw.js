import{a5 as g,a6 as h,dt as u,dG as b,d8 as y,v as a,x as m,J as w}from"./main-ChBpeLuI.js";import{h as k}from"./UpdatingHandles-ByLwtd2H.js";import _ from"./GraphicsLayer-CEFTGM7a.js";import{T as v,j as f,a as B,w as M}from"./RouteLayerView2D-DcpKmODN.js";import{l as V}from"./SketchViewModel-D9ZF8dZb.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsCollection-BcqF84Hp.js";import"./Layer-C8qdLGqe.js";import"./TimeExtent-CzdjVl1J.js";import"./ScaleRangeLayer-W55xjl_Q.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-CQWhtqWC.js";import"./parser-C-ANuOvn.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BF7auK35.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-tE5xFfGc.js";import"./lengthUtils-DW5UWe69.js";import"./CollectionFlattener-8Hbjw-u9.js";import"./LayerView2D-C_pgOOh4.js";import"./utils-BQBvadb7.js";import"./Container-Clb-Txai.js";import"./MapView-BxqcGOdz.js";import"./globalCss-Bl9pBa6q.js";import"./Queue-_yuDJ6-g.js";import"./signal-BxjIf5qP.js";import"./Version-CzOZXtHC.js";import"./workers-Cj4KKqgT.js";import"./intl-DY9rw3ns.js";import"./projection-DuKQIxKG.js";import"./TileInfo-cU7H2N2d.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-CFi_g9d8.js";import"./uuid-Cl5lrJ4c.js";import"./Map-C5ppFvTm.js";import"./Basemap-zu01ntNF.js";import"./loadAll-B5aiTbEA.js";import"./PortalItem-D8TtwmaX.js";import"./HeightModelInfo-D54jmLyi.js";import"./timeZoneUtils-Dc-NFr4G.js";import"./ReactiveMap-BGETLtgi.js";import"./Query-BFb0X7DR.js";import"./Field-iUJYm4Zt.js";import"./fieldType-UsSWCOAx.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-CsL44sfb.js";import"./a11yUtils-CeWADWoB.js";import"./heightModelInfoUtils-BVnaXwLM.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-ZGviY68h.js";import"./utils-C2bo4yMr.js";import"./utils-1EvT4Pql.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-BCde3MOk.js";import"./vec32-Cs65DiMU.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-CYBcG_xJ.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BjdvCsDY.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CFvWyj5V.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-iq1Oqnvg.js";import"./EffectView-D8s1d1FF.js";import"./layerViewUtils-CdIXNNew.js";import"./GraphicContainer-CB1--_96.js";import"./AGraphicContainer-kWxxV66S.js";import"./TechniqueInstance-kWD44oAp.js";import"./UpdateTracking2D-DBDTMiY2.js";import"./dataViewUtils-DQp-6ilq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-CYZLvuuh.js";import"./VertexArrayObject-DrI-YH88.js";import"./memoryEstimations-M5QpWVOF.js";import"./TileContainer-DJezZvla.js";import"./WGLContainer-C8IG6uEL.js";import"./ProgramTemplate-NB_U5EPf.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-Daes2vu4.js";import"./OptimizedFeatureSet-D1dTxeI4.js";import"./OptimizedGeometry-DQetIo3B.js";import"./FeatureCommandQueue-BKdsI3UJ.js";import"./CIMSymbolHelper-B7WiCSD3.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BoCHBQ3p.js";import"./Rect-CGCG_SiS.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-Bj21DNOh.js";import"./floatRGBA-B4khEtA5.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BQqBVB_l.js";import"./ShaderBuilder-CeQoC6YS.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-B_Zq4uqI.js";import"./GraphicsView2D-CYAF6SOH.js";import"./FieldsIndex-BVH5igVS.js";import"./OverrideHelper-Zlqu_pde.js";import"./colorUtils-DQHR14sZ.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-BcpShxyH.js";import"./quantizationUtils-dlkWnEZ5.js";import"./FeatureMetadata-BAJZnUB_.js";import"./diffUtils-Beb8vktw.js";import"./queryUtils-BxUTfsPh.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BoNlCmZZ.js";import"./TimeOnly-izciB4-y.js";import"./labelUtils-CSYj9Rmb.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CkzG7RUJ.js";import"./dehydratedFeatures-h_8TezFK.js";import"./LayerView-JeQnad0D.js";import"./quantityUtils-NL7r1Z9l.js";import"./projectVectorToVector-Cq-AkgSW.js";import"./projectPointToVector-BqWLjNf_.js";import"./geodesicUtils-DhxYZ_ta.js";import"./plane-WvzyRTpm.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DfujaCuz.js";function n(r,t){r.networkFeature=t}function L(r){const t=s(r.graphic);return{...r,networkFeature:t}}function S(r){const t=r.graphics.map(e=>s(e));return{...r,networkFeatures:t}}function s(r){return r.networkFeature}function F(r){return r?.type==="point"||r?.type==="polyline"||r?.type==="polygon"}let p=class extends g{constructor(r){super(r),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async t=>{switch(t.type){case"update":switch(t.state){case"active":case"complete":for(const e of t.graphics)s(e).geometry=F(e.geometry)?e.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const e of t.graphics){const o=s(e);this._removeNetworkFeature(o)}break;case"create":if(t.graphic&&t.state==="complete"&&this._createMode){const e=t.graphic.geometry?.clone(),o=t.graphic.symbol?.clone();if(!e)break;switch(this._createMode){case"stop":{if(e.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:l})=>!l)){i.at(0).geometry=e;break}if(i.length>1&&i.filter((l,d)=>d!==0).every(({geometry:l})=>!l)){i.at(1).geometry=e;break}const c=new M({geometry:e});i.add(c),n(t.graphic,c);break}case"point-barrier":{if(e.type!=="point")break;const i=new B({geometry:e,symbol:o});this.layer.pointBarriers.add(i),n(t.graphic,i);break}case"polyline-barrier":{if(e.type!=="polyline")break;const i=new f({geometry:e,symbol:o});this.layer.polylineBarriers.add(i),n(t.graphic,i);break}case"polygon-barrier":{if(e.type!=="polygon")break;const i=new v({geometry:e,symbol:o});this.layer.polygonBarriers.add(i),n(t.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(t.type,t.type==="create"?L(t):S(t))}}initialize(){this._sketchViewModel=new V({layer:this._graphicsLayer,view:this.view}),this.addHandles([h(()=>this.enabled,r=>{r?this._activate():this._deactivate()},u),h(()=>{const{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}=this.layer;return{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),b(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=y(this._graphicsLayer),this._sketchViewModel=y(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(r=>s(r))}get updating(){return this._updatingHandles.updating}create(r){switch(this._createMode=r,r){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(r){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(r){const t=this._graphicsLayer.graphics.find(e=>s(e)===r);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(r)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const r=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(t=>t.toArray().map(e=>{const o=e.toGraphic();return o.networkFeature=e,o}));this._graphicsLayer.removeAll().addMany(r)}_removeNetworkFeature(r){switch(r.type){case"stop":this.layer.stops.remove(r);break;case"point-barrier":this.layer.pointBarriers.remove(r);break;case"polyline-barrier":this.layer.polylineBarriers.remove(r);break;case"polygon-barrier":this.layer.polygonBarriers.remove(r)}}};a([m()],p.prototype,"enabled",void 0),a([m({constructOnly:!0})],p.prototype,"layer",void 0),a([m({readOnly:!0})],p.prototype,"selectedNetworkFeatures",null),a([m()],p.prototype,"updating",null),a([m({constructOnly:!0})],p.prototype,"view",void 0),p=a([w("esri.views.2d.layers.support.RouteLayerInteraction")],p);export{p as RouteLayerInteraction};
