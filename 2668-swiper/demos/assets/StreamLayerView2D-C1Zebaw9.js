import{v as i,x as n,J as c,a6 as a,s as d,fd as h,Q as l,df as y}from"./main-ChBpeLuI.js";import{d as u}from"./FeatureSet-Dj5rmIYQ.js";import{n as _,d as g}from"./FeatureLayerView2D-LmIVDdbz.js";import f from"./FeatureFilter-Bsd89PbN.js";import"./preload-helper-ExcqyqRp.js";import"./Field-iUJYm4Zt.js";import"./fieldType-UsSWCOAx.js";import"./UpdatingHandles-ByLwtd2H.js";import"./EffectView-D8s1d1FF.js";import"./parser-C-ANuOvn.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BF7auK35.js";import"./common-DQOJ18NT.js";import"./featureConversionUtils-Daes2vu4.js";import"./OptimizedFeatureSet-D1dTxeI4.js";import"./memoryEstimations-M5QpWVOF.js";import"./OptimizedGeometry-DQetIo3B.js";import"./labelingInfo-P2aoxd3z.js";import"./uuid-Cl5lrJ4c.js";import"./Query-BFb0X7DR.js";import"./TimeExtent-CzdjVl1J.js";import"./SimpleRenderer-BS7fXNWY.js";import"./commonProperties-B-h3mQxD.js";import"./colorRamps-B5EevMIR.js";import"./ColorStop-C_irrj4h.js";import"./visualVariableUtils-B8rbDePz.js";import"./lengthUtils-DW5UWe69.js";import"./UniqueValueRenderer-CqVCq9Ag.js";import"./diffUtils-Beb8vktw.js";import"./RendererLegendOptions-DCnTfFns.js";import"./styleUtils-DFiu-v5E.js";import"./RelationshipQuery-B7qjJ3nK.js";import"./NormalizationBinParametersMixin-DXnhCs2i.js";import"./labelUtils-CSYj9Rmb.js";import"./timeSupport-CJjZB0nu.js";import"./globalCss-Bl9pBa6q.js";import"./Queue-_yuDJ6-g.js";import"./signal-BxjIf5qP.js";import"./Version-CzOZXtHC.js";import"./AttributeBinsFeatureSet-Wg9rJKur.js";import"./AttributeBinsQuery-BUHIKBZV.js";import"./queryUtils-BxUTfsPh.js";import"./projection-DuKQIxKG.js";import"./normalizeUtils-ZGviY68h.js";import"./utils-C2bo4yMr.js";import"./utils-1EvT4Pql.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CLNStIle.js";import"./timeZoneUtils-Dc-NFr4G.js";import"./LayerView2D-C_pgOOh4.js";import"./utils-BQBvadb7.js";import"./Container-Clb-Txai.js";import"./MapView-BxqcGOdz.js";import"./CollectionFlattener-8Hbjw-u9.js";import"./workers-Cj4KKqgT.js";import"./intl-DY9rw3ns.js";import"./TileInfo-cU7H2N2d.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-CFi_g9d8.js";import"./Map-C5ppFvTm.js";import"./Basemap-zu01ntNF.js";import"./loadAll-B5aiTbEA.js";import"./PortalItem-D8TtwmaX.js";import"./Layer-C8qdLGqe.js";import"./GraphicsCollection-BcqF84Hp.js";import"./HeightModelInfo-D54jmLyi.js";import"./ReactiveMap-BGETLtgi.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-CsL44sfb.js";import"./a11yUtils-CeWADWoB.js";import"./heightModelInfoUtils-BVnaXwLM.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-BCde3MOk.js";import"./vec32-Cs65DiMU.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-CYBcG_xJ.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BjdvCsDY.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CFvWyj5V.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-iq1Oqnvg.js";import"./layerViewUtils-CdIXNNew.js";import"./TechniqueInstance-kWD44oAp.js";import"./UpdateTracking2D-DBDTMiY2.js";import"./dataViewUtils-DQp-6ilq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-CYZLvuuh.js";import"./VertexArrayObject-DrI-YH88.js";import"./TileContainer-DJezZvla.js";import"./WGLContainer-C8IG6uEL.js";import"./ProgramTemplate-NB_U5EPf.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BKdsI3UJ.js";import"./CIMSymbolHelper-B7WiCSD3.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BoCHBQ3p.js";import"./Rect-CGCG_SiS.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-Bj21DNOh.js";import"./floatRGBA-B4khEtA5.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BQqBVB_l.js";import"./ShaderBuilder-CeQoC6YS.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-B_Zq4uqI.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./heatmapUtils-DqhH5K3c.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SDFHelper-Cxcr2ryv.js";import"./parquet-BRkN63QK.js";import"./displayFilterUtils-DT3Eurar.js";import"./FeatureEffect-CydASVIS.js";import"./jsonUtils-CQWhtqWC.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-Daw9dG17.js";import"./LayerView-JeQnad0D.js";import"./RefreshableLayerView-eZsEehzU.js";const v=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:f})],e.prototype,"filter",void 0),e=i([c("esri.views.layers.StreamLayerView")],e),e};let s=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return l(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(m=>{const p=u.fromJSON(m);return p.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),p}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,e){return(await super.queryObjectIds(t,e)).filter(y)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([c("esri.views.2d.layers.StreamLayerView2D")],s);const ze=s;export{ze as default};
