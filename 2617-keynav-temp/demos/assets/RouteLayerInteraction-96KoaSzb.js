import{a5 as g,a6 as h,dt as u,dG as b,d8 as y,v as a,x as m,J as w}from"./main-CYsUJ0p-.js";import{h as k}from"./UpdatingHandles-sjy584WK.js";import _ from"./GraphicsLayer-BYg4hmdV.js";import{T as v,j as f,a as B,w as M}from"./RouteLayerView2D-B07EbWo0.js";import{l as V}from"./SketchViewModel-ZKcSbB0c.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsCollection-DvZiu3MY.js";import"./Layer-BtJTBZKb.js";import"./TimeExtent-D8z-y5V9.js";import"./ScaleRangeLayer-BFWl8IDr.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-B1EBRJXD.js";import"./parser-DmEIcOcz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CQqE4CSS.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-5OmsfIqj.js";import"./lengthUtils-CvI1RwLn.js";import"./CollectionFlattener-zYO_8A9j.js";import"./LayerView2D-DUlQSIkz.js";import"./utils-BQBvadb7.js";import"./Container-BZUPKlIH.js";import"./MapView-COCiZgo2.js";import"./globalCss-UEslrETr.js";import"./Queue-hAmiXGDB.js";import"./signal-CNqVuguy.js";import"./Version-CYDmhEt4.js";import"./workers-D9twtQ0q.js";import"./intl-DM2pXWQh.js";import"./projection-D9xQtgOE.js";import"./TileInfo-CIzYG93p.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BniD0jtK.js";import"./uuid-Cl5lrJ4c.js";import"./Map-D7PLlqPQ.js";import"./Basemap-DnJL79va.js";import"./loadAll-zWH8i06p.js";import"./PortalItem-DJS9PKu0.js";import"./HeightModelInfo-DZpG0EX2.js";import"./timeZoneUtils-C65XZmgK.js";import"./ReactiveMap-BuoG4aCa.js";import"./Query-CJyzI-IG.js";import"./Field-D5ad_C7X.js";import"./fieldType-CgoKF7tT.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DyMIUIh9.js";import"./a11yUtils-BT4KSqGF.js";import"./heightModelInfoUtils-BASXfWtq.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-BcD431XT.js";import"./utils-TdjlCldh.js";import"./utils-BjuhnhdS.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DdBoURl_.js";import"./vec32-DDewUU4W.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-CpGGS2A9.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-aHvie7vn.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-B-qsOq6u.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DTx9kesi.js";import"./EffectView-DMqiLQAt.js";import"./layerViewUtils-DB8csrPe.js";import"./GraphicContainer-BWXMmg8M.js";import"./AGraphicContainer-6TKP1bFa.js";import"./TechniqueInstance-BWNd683_.js";import"./UpdateTracking2D-BDMAxlMx.js";import"./dataViewUtils-Ceb7wwWm.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-B4zFO0qH.js";import"./VertexArrayObject-DP-s04Il.js";import"./memoryEstimations-D47tRywx.js";import"./TileContainer-DmOjFd_X.js";import"./WGLContainer-C_W4duyc.js";import"./ProgramTemplate-CEEwCsJX.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-Vyo1Ar3V.js";import"./OptimizedFeatureSet-CE5jyXQg.js";import"./OptimizedGeometry-rj3qILai.js";import"./FeatureCommandQueue-jghOM-ml.js";import"./CIMSymbolHelper-x9eSY-wy.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-RE_3a-1v.js";import"./Rect-CdOeusra.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-nbtYKIEq.js";import"./floatRGBA-CwCAsFv7.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DBBMvrEO.js";import"./ShaderBuilder-K_yAeOVE.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-D8M_X9rm.js";import"./GraphicsView2D-BYgx3la8.js";import"./FieldsIndex-Dgw62SFH.js";import"./OverrideHelper-WHn6kKJd.js";import"./colorUtils-BWk5TZ1W.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-CQFAt3lJ.js";import"./quantizationUtils-D6QxNDxA.js";import"./FeatureMetadata-uNgy4g3V.js";import"./diffUtils-CRZdzm2a.js";import"./queryUtils-BeslqGsW.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BMADQ5my.js";import"./TimeOnly-D8Fw5SzP.js";import"./labelUtils-BgFSzkkO.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CaBXO-J_.js";import"./dehydratedFeatures-B4AHgoDD.js";import"./LayerView-B1PAyaRI.js";import"./quantityUtils-i-F6Bp60.js";import"./projectVectorToVector-CppOfEit.js";import"./projectPointToVector-qqzPk7bk.js";import"./geodesicUtils-CrTn05th.js";import"./plane-DuQlMeQz.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-B06WQydY.js";function n(r,t){r.networkFeature=t}function L(r){const t=s(r.graphic);return{...r,networkFeature:t}}function S(r){const t=r.graphics.map(e=>s(e));return{...r,networkFeatures:t}}function s(r){return r.networkFeature}function F(r){return r?.type==="point"||r?.type==="polyline"||r?.type==="polygon"}let p=class extends g{constructor(r){super(r),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async t=>{switch(t.type){case"update":switch(t.state){case"active":case"complete":for(const e of t.graphics)s(e).geometry=F(e.geometry)?e.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const e of t.graphics){const o=s(e);this._removeNetworkFeature(o)}break;case"create":if(t.graphic&&t.state==="complete"&&this._createMode){const e=t.graphic.geometry?.clone(),o=t.graphic.symbol?.clone();if(!e)break;switch(this._createMode){case"stop":{if(e.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:l})=>!l)){i.at(0).geometry=e;break}if(i.length>1&&i.filter((l,d)=>d!==0).every(({geometry:l})=>!l)){i.at(1).geometry=e;break}const c=new M({geometry:e});i.add(c),n(t.graphic,c);break}case"point-barrier":{if(e.type!=="point")break;const i=new B({geometry:e,symbol:o});this.layer.pointBarriers.add(i),n(t.graphic,i);break}case"polyline-barrier":{if(e.type!=="polyline")break;const i=new f({geometry:e,symbol:o});this.layer.polylineBarriers.add(i),n(t.graphic,i);break}case"polygon-barrier":{if(e.type!=="polygon")break;const i=new v({geometry:e,symbol:o});this.layer.polygonBarriers.add(i),n(t.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(t.type,t.type==="create"?L(t):S(t))}}initialize(){this._sketchViewModel=new V({layer:this._graphicsLayer,view:this.view}),this.addHandles([h(()=>this.enabled,r=>{r?this._activate():this._deactivate()},u),h(()=>{const{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}=this.layer;return{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),b(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=y(this._graphicsLayer),this._sketchViewModel=y(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(r=>s(r))}get updating(){return this._updatingHandles.updating}create(r){switch(this._createMode=r,r){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(r){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(r){const t=this._graphicsLayer.graphics.find(e=>s(e)===r);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(r)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const r=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(t=>t.toArray().map(e=>{const o=e.toGraphic();return o.networkFeature=e,o}));this._graphicsLayer.removeAll().addMany(r)}_removeNetworkFeature(r){switch(r.type){case"stop":this.layer.stops.remove(r);break;case"point-barrier":this.layer.pointBarriers.remove(r);break;case"polyline-barrier":this.layer.polylineBarriers.remove(r);break;case"polygon-barrier":this.layer.polygonBarriers.remove(r)}}};a([m()],p.prototype,"enabled",void 0),a([m({constructOnly:!0})],p.prototype,"layer",void 0),a([m({readOnly:!0})],p.prototype,"selectedNetworkFeatures",null),a([m()],p.prototype,"updating",null),a([m({constructOnly:!0})],p.prototype,"view",void 0),p=a([w("esri.views.2d.layers.support.RouteLayerInteraction")],p);export{p as RouteLayerInteraction};
