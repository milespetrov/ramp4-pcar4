import{bp as l,bq as y}from"./main-CYsUJ0p-.js";import{a as b}from"./CIMSymbolHelper-x9eSY-wy.js";import{CIMSymbolRasterizer as j}from"./CIMSymbolRasterizer-BlukSq5Q.js";import{OverrideHelper as R}from"./OverrideHelper-WHn6kKJd.js";import{V}from"./utils-BRg6PM3S.js";import{t as S,l as q}from"./utils-89EIrRk9.js";import"./preload-helper-ExcqyqRp.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-RE_3a-1v.js";import"./OptimizedGeometry-rj3qILai.js";import"./memoryEstimations-D47tRywx.js";import"./Rect-CdOeusra.js";import"./enums-BJSSbDkD.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-nbtYKIEq.js";import"./floatRGBA-CwCAsFv7.js";import"./definitions-CPtb4TQS.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./vec2f32-BbH2jxlN.js";import"./BoundingBox-CnpCxTZE.js";import"./CIMResourceManager-CmVQTXB6.js";import"./imageUtils-B-qsOq6u.js";import"./colorUtils-BWk5TZ1W.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-CQFAt3lJ.js";import"./quantizationUtils-D6QxNDxA.js";import"./globalCss-UEslrETr.js";import"./Queue-hAmiXGDB.js";import"./signal-CNqVuguy.js";import"./Version-CYDmhEt4.js";import"./jsxFactory-BniD0jtK.js";import"./intl-DM2pXWQh.js";import"./uuid-Cl5lrJ4c.js";import"./utils-DtiEdqVr.js";import"./jsonUtils-B1EBRJXD.js";import"./parser-DmEIcOcz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CQqE4CSS.js";import"./cimSymbolUtils-DQwfRrQ3.js";import"./LRUCache-ZVGpm5LR.js";import"./MemCache-eROtPoaD.js";import"./webStyleSymbolUtils-DV7EgeL_.js";import"./devEnvironmentUtils-8WtPGj6h.js";import"./styleUtils-BBaYaBi7.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./ColorStop-DC2_zcmr.js";import"./TimeExtent-D8z-y5V9.js";import"./utils-D1Nu5Low.js";import"./timeZoneUtils-C65XZmgK.js";import"./typeUtils-Bd2dQN87.js";import"./ClassBreaksRenderer-CIFHT9rG.js";import"./commonProperties-CdVzH3re.js";import"./colorRamps-Y9yi_cyQ.js";import"./visualVariableUtils-Cp0oF_3f.js";import"./lengthUtils-CvI1RwLn.js";import"./RendererLegendOptions-D5TxXM9V.js";import"./FieldsIndex-Dgw62SFH.js";import"./heatmapUtils-Dp2xiZg9.js";import"./SimpleRenderer-BB975yVb.js";import"./UniqueValueRenderer-DB-Ed5M4.js";import"./diffUtils-CRZdzm2a.js";const f=new j(null),u=l(S.size),P=l(S.maxSize),M=l(S.lineWidth),D=1;async function E(a,t,n){const e=t?.size;let i=e!=null&&typeof e=="object"&&"width"in e?e.width:e,r=e!=null&&typeof e=="object"&&"height"in e?e.height:e;if(i==null||r==null)if(n==="esriGeometryPolygon")i=r=t.maxSize?Math.min(t.maxSize,u):u;else{const o=await U(a,t,n);o&&(i=o.width,r=o.height),n==="esriGeometryPolyline"&&(i=t.maxSize?Math.min(t.maxSize,M):M),i=i!=null&&isFinite(i)?Math.min(i,P):u,r=r!=null&&isFinite(r)?Math.max(Math.min(r,P),D):u}return t.style==="legend"&&n==="esriGeometryPolyline"&&(i=M),{width:i,height:r}}async function U(a,t,n){const{feature:e,fieldMap:i,viewParams:r}=t.cimOptions||t,o=await R.resolveSymbolOverrides(a.data,e,null,i,n,null,r);if(!o)return null;(a=a.clone()).data={type:"CIMSymbolReference",symbol:o},a.data.primitiveOverrides=void 0;const p=[];return b.fetchResources(o,f.resourceManager,p),b.fetchFonts(o,f.resourceManager,p),p.length>0&&await Promise.all(p),b.getEnvelope(o,null,f.resourceManager)}async function Yt(a,t={}){const{node:n,opacity:e,symbolConfig:i}=t,r=i!=null&&typeof i=="object"&&"isSquareFill"in i&&i.isSquareFill,o=t.cimOptions||t,p=o.geometryType||V(a?.data?.symbol),m=await E(a,t,p),{feature:C,fieldMap:G}=o,I=t?.geometry||r||p!=="esriGeometryPolygon"?"preview":"legend";let v=m;const x=m;if(t?.geometry&&(p==="esriGeometryPolygon"||p==="esriGeometryPolyline")&&(y(m.width)<200||y(m.height)<200)){const F=m.width>m.height?l(200)*m.height/m.width:l(200);v={width:m.width>m.height?l(200):l(200)*m.width/m.height,height:F}}const g=await f.rasterizeCIMSymbolAsync(a,C,v,I,G,p,null,o.viewParams,o.allowScalingUp,t?.geometry?.toJSON());if(!g)return null;const{width:L,height:O}=g,h=document.createElement("canvas");h.width=L,h.height=O,h.getContext("2d").putImageData(g,0,0);const d=y(x.width),w=y(x.height),s=new Image(d,w);s.src=h.toDataURL(),s.ariaLabel=t.ariaLabel??null,s.alt=t.ariaLabel??"",e!=null&&(s.style.opacity=`${e}`);let c=s;if(t.effectView!=null){const z={shape:{type:"image",x:0,y:0,width:d,height:w,src:s.src},fill:null,stroke:null,offset:[0,0]};c=q([[z]],[d,w],{effectView:t.effectView,ariaLabel:t.ariaLabel})}return n&&c&&n.appendChild(c),c}export{Yt as previewCIMSymbol};
