import{v as e,x as p,J as n,bc as l,n as d,a6 as u,Q as h}from"./main-CYsUJ0p-.js";import{c}from"./GraphicsCollection-DvZiu3MY.js";import{r as y}from"./BitmapContainer-j40agttr.js";import{S as f}from"./LayerView2D-DUlQSIkz.js";import{A as _}from"./GraphicsView2D-BYgx3la8.js";import{h as x}from"./HighlightGraphicContainer-CZ1-bLyc.js";import{_ as H}from"./ExportStrategy-BOyftNJp.js";import{u as w}from"./MapView-COCiZgo2.js";import{y as v}from"./LayerView-B1PAyaRI.js";import{y as I}from"./ExportImageParameters-BaopvAm6.js";import{i as $}from"./timeSupport-DMTMZY8w.js";import{i as V}from"./RefreshableLayerView-CWVN35OQ.js";import{S as E}from"./MapServiceLayerViewHelper-kN0BDW2C.js";import{r as G}from"./drapedUtils-Cyxy2sVT.js";import{c as P}from"./HighlightDefaults-DyMIUIh9.js";import"./preload-helper-ExcqyqRp.js";import"./WGLContainer-C_W4duyc.js";import"./dataViewUtils-Ceb7wwWm.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-CEEwCsJX.js";import"./Texture-aHvie7vn.js";import"./signal-CNqVuguy.js";import"./VertexArrayObject-DP-s04Il.js";import"./memoryEstimations-D47tRywx.js";import"./mat2df32-orApM5a3.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat3-CruJiiUv.js";import"./vec32-DDewUU4W.js";import"./vec3f32-nZdmKIgz.js";import"./definitions-CPtb4TQS.js";import"./Container-BZUPKlIH.js";import"./EffectView-DMqiLQAt.js";import"./parser-DmEIcOcz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CQqE4CSS.js";import"./Tile-CpGGS2A9.js";import"./vec2-maR1OrZI.js";import"./Queue-hAmiXGDB.js";import"./ReactiveMap-BuoG4aCa.js";import"./quickselect-QQC62dOK.js";import"./Query-CJyzI-IG.js";import"./Field-D5ad_C7X.js";import"./fieldType-CgoKF7tT.js";import"./TimeExtent-D8z-y5V9.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-DohEyf3f.js";import"./featureConversionUtils-Vyo1Ar3V.js";import"./OptimizedFeatureSet-CE5jyXQg.js";import"./OptimizedGeometry-rj3qILai.js";import"./BitmapTechnique-BeAssKOa.js";import"./GraphShaderModule-DBBMvrEO.js";import"./FramebufferObject-B4zFO0qH.js";import"./ShaderBuilder-K_yAeOVE.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-DB8csrPe.js";import"./FieldsIndex-Dgw62SFH.js";import"./timeZoneUtils-C65XZmgK.js";import"./CIMSymbolHelper-x9eSY-wy.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-RE_3a-1v.js";import"./Rect-CdOeusra.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-nbtYKIEq.js";import"./floatRGBA-CwCAsFv7.js";import"./OverrideHelper-WHn6kKJd.js";import"./colorUtils-BWk5TZ1W.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-CQFAt3lJ.js";import"./quantizationUtils-D6QxNDxA.js";import"./FeatureMetadata-uNgy4g3V.js";import"./diffUtils-CRZdzm2a.js";import"./UpdateTracking2D-BDMAxlMx.js";import"./UpdatingHandles-sjy584WK.js";import"./queryUtils-BeslqGsW.js";import"./projection-D9xQtgOE.js";import"./normalizeUtils-BcD431XT.js";import"./utils-TdjlCldh.js";import"./utils-BjuhnhdS.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BMADQ5my.js";import"./TimeOnly-D8Fw5SzP.js";import"./intl-DM2pXWQh.js";import"./labelUtils-BgFSzkkO.js";import"./FeatureCommandQueue-jghOM-ml.js";import"./lengthUtils-CvI1RwLn.js";import"./QueueProcessor-D8M_X9rm.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CaBXO-J_.js";import"./dehydratedFeatures-B4AHgoDD.js";import"./AGraphicContainer-6TKP1bFa.js";import"./TechniqueInstance-BWNd683_.js";import"./TileContainer-DmOjFd_X.js";import"./TileInfo-CIzYG93p.js";import"./TileKey-DZd6gJy7.js";import"./globalCss-UEslrETr.js";import"./Version-CYDmhEt4.js";import"./CollectionFlattener-zYO_8A9j.js";import"./workers-D9twtQ0q.js";import"./jsxFactory-BniD0jtK.js";import"./uuid-Cl5lrJ4c.js";import"./Map-D7PLlqPQ.js";import"./Basemap-DnJL79va.js";import"./loadAll-zWH8i06p.js";import"./PortalItem-DJS9PKu0.js";import"./Layer-BtJTBZKb.js";import"./HeightModelInfo-DZpG0EX2.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-BT4KSqGF.js";import"./heightModelInfoUtils-BASXfWtq.js";import"./ViewingMode-HRfKv6NR.js";import"./Scheduler-DdBoURl_.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-B-qsOq6u.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DTx9kesi.js";import"./scaleUtils-C7UrJST1.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-Bp5WKd3w.js";import"./popupUtils-D4w078kl.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return e([p()],i.prototype,"exportImageParameters",void 0),e([p({readOnly:!0})],i.prototype,"floors",null),e([p({readOnly:!0})],i.prototype,"exportImageVersion",null),e([p()],i.prototype,"layer",void 0),e([p()],i.prototype,"suspended",void 0),e([p({readOnly:!0})],i.prototype,"timeExtent",null),i=e([n("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(V(f(v))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,o=r>=10.3,g=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new x(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new E({createFetchPopupFeaturesQueryGeometry:(s,a)=>G(s,a,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,a)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:a})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,o){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,r,o){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const r=w(t);if(r.length===0)return h();const o=i?.name??P;return this._addHighlightGraphics(r,o),h(()=>!this.destroyed&&this._removeHighlightGraphics(r,o))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(r=>r.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(r=>r.uid),i)}};e([p()],m.prototype,"strategy",void 0),e([p()],m.prototype,"updating",void 0),m=e([n("esri.views.2d.layers.MapImageLayerView2D")],m);const Yi=m;export{Yi as default};
