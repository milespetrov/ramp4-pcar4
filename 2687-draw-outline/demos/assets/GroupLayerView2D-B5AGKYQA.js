import{q as t,v as a,ea as h,x as m,V as n,ad as l,ag as o,e9 as d}from"./main-COVUzkxo.js";import{S as V}from"./LayerView2D-gDCvtD2t.js";import{u as w}from"./LayerView-BRwTuFfJ.js";import"./preload-helper-B76NpbEU.js";import"./utils-BQBvadb7.js";import"./Container-DfR9Y7z9.js";import"./MapView-DzCbWkgt.js";import"./Cyclical-CHQz5Ozj.js";import"./CollectionFlattener-D7P2lWUn.js";import"./workers-CRJicKMX.js";import"./Queue-BRgOajEz.js";import"./intl-Ck0IFfk8.js";import"./projectionUtils-CqZcA6zL.js";import"./TileInfo-B6srxcfL.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DSbEp9t5.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-CNvjgBMz.js";import"./asyncUtils-CMx2v4_C.js";import"./utils-DG9342FG.js";import"./Version-CKHJFv95.js";import"./Map-Deiax_At.js";import"./Basemap-C4oBmHA1.js";import"./loadAll-B2Hlkscr.js";import"./PortalItem-B60CtWo6.js";import"./writeUtils-NLAXQ-ju.js";import"./persistable-BECfD7YZ.js";import"./MD5-MtSiOt06.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-uXesQ7Z_.js";import"./PolygonCollection-CjBrvWGe.js";import"./editableLayers-BXBokYW5.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CSIwwFOc.js";import"./common-DQOJ18NT.js";import"./TablesMixin-GNNBAuYX.js";import"./Layer-z4Cg8KLX.js";import"./TimeExtent-68vx0vtV.js";import"./GraphicsCollection-CN68OafR.js";import"./HeightModelInfo-D_JGP4GG.js";import"./timeZoneUtils-e5c-UDpP.js";import"./ReactiveMap-CuJuKYSS.js";import"./Query-BGoAbEhV.js";import"./Field-CjNcNBtj.js";import"./fieldType-Gbto0FJI.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-CH-gvrN5.js";import"./a11yUtils-BANG-rQU.js";import"./projectionUtils-DdBYyobH.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-CJRNJaz1.js";import"./normalizeUtilsCommon-Dv7p-tKp.js";import"./utils-BUkKDGVD.js";import"./utils-gdzLJiHe.js";import"./mat2df32-Dpt2CT5P.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-6ez6wHTi.js";import"./debugFlags-aZ8Ix2co.js";import"./vec32-BJSR8U1i.js";import"./unitBezier-B1N-tmtC.js";import"./enums-VUTPuS3R.js";import"./TileKey-CC-t9kVo.js";import"./quickselect-QQC62dOK.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-CXzreJzQ.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-DvfoHx0N.js";import"./capabilities-Bi6C4OG6.js";import"./modeUtils-1fSvrGRf.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./ColorBackground-DvBFA9Cw.js";import"./EffectView-Cl407nl2.js";import"./parser-Cmoyl6kH.js";import"./layerViewUtils-pzc_jGSw.js";let r=class extends w{constructor(i){super(i),this.type="group",this.layerViews=new n}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),l(()=>this.layer?.visibilityMode,()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},o),l(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},o)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){return this.view?.layerViewManager?.isCreatingLayerViewsForLayer(this.layer)??!1}set layerViews(i){this._set("layerViews",d(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>!!this._findLayerViewForLayer(e)?.visible);return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(s=>l(()=>s.visible,y=>this._applyVisibility(()=>{y!==this.visible&&(s.visible=this.visible)},()=>this._applyExclusiveVisibility(y?s:null)),o)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e?.visible?e:null))}_applyVisibility(i,e){this._hasLayerViewVisibleOverrides()&&(this.layer?.visibilityMode==="inherited"?i():this.layer?.visibilityMode==="exclusive"&&e())}};t([a({readOnly:!0})],r.prototype,"creatingLayerViews",null),t([a({cast:h})],r.prototype,"layerViews",null),t([a({readOnly:!0})],r.prototype,"updatingProgress",null),t([a()],r.prototype,"view",void 0),r=t([m("esri.views.layers.GroupLayerView")],r);let p=class extends V(r){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};p=t([m("esri.views.2d.layers.GroupLayerView2D")],p);const Bi=p;export{Bi as default};
