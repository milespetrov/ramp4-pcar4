import{$ as N,cG as s}from"./main-COVUzkxo.js";import"./mat4-CSIwwFOc.js";import"./mat4f64-q_b6UJoq.js";import"./vec32-BJSR8U1i.js";import"./projectionUtils-CqZcA6zL.js";import"./projectVectorToVector-DxoKglqX.js";import"./sphere-CaiU__rL.js";import"./Query-BGoAbEhV.js";import{D as C,C as D}from"./I3SBinaryReader-COGMbBel.js";import{g as _}from"./edgeUtils-CC85H2Z2.js";import"./NormalAttribute.glsl-CjAZyuFm.js";import{I as R}from"./orientedBoundingBox-7dJrps0M.js";s();var f;async function x(o,m,I,p,S,T,c,u){const a=[];for(const t of m)if(t&&S.includes(t.name)){const r=`${o}/nodes/${I}/attributes/${t.key}/0`;a.push({url:r,storageInfo:t})}const i=await Promise.allSettled(a.map(t=>N(t.url,{responseType:"array-buffer",query:{...c,token:T},signal:u?.signal}).then(r=>C(t.storageInfo,r.data)))),E=[];for(const t of p){const r={};for(let n=0;n<i.length;n++){const e=i[n];if(e.status==="fulfilled"){const l=e.value;r[a[n].storageInfo.name]=D(l,t)}}E.push(r)}return E}(function(o){o[o.OUTSIDE=0]="OUTSIDE",o[o.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",o[o.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",o[o.INSIDE=3]="INSIDE"})(f||(f={}));_({color:[0,0,0,0],opacity:0});s();s();new R;new Array(72);export{x as B};
