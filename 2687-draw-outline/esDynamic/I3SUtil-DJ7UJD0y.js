import{a0 as N,cD as a}from"./main-CzMZyink.js";import"./mat4-D452EJDe.js";import"./mat4f64-xsZDPPj0.js";import"./vec32-B-aNDQPZ.js";import"./projectionUtils-DHfuRXO6.js";import"./projectVectorToVector-Cbhxokgk.js";import"./sphere-SFZC-E6T.js";import"./Query-Cfv_Gn98.js";import{D,C}from"./I3SBinaryReader-krEXu5CB.js";import{g as R}from"./edgeUtils-DPFiLEC-.js";import"./NormalAttribute.glsl-C_Y-lrHJ.js";import{I as _}from"./orientedBoundingBox-CoBkZ2kU.js";a();var f;async function g(t,m,I,p,S,T,l,c){const s=[];for(const r of m)if(r&&S.includes(r.name)){const o=`${t}/nodes/${I}/attributes/${r.key}/0`;s.push({url:o,storageInfo:r})}const e=await Promise.allSettled(s.map(r=>N(r.url,{responseType:"array-buffer",query:{...l,token:T},signal:c?.signal}).then(o=>D(r.storageInfo,o.data)))),i=[];for(const r of p){const o={};for(let n=0;n<e.length;n++){const E=e[n];if(E.status==="fulfilled"){const u=E.value;o[s[n].storageInfo.name]=C(u,r)}}i.push(o)}return i}(function(t){t[t.OUTSIDE=0]="OUTSIDE",t[t.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",t[t.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",t[t.INSIDE=3]="INSIDE"})(f||(f={})),R({color:[0,0,0,0],opacity:0}),a(),a(),new _,new Array(72);export{g as B};
