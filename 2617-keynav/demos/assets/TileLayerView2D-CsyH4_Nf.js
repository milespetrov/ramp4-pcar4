import{Q as g,bG as w,bc as m,ds as y,n as I,v as n,x as f,J as T}from"./main-CUH7s9Sn.js";import{c as V}from"./GraphicsCollection-CDsskFzg.js";import"./colorUtils-DgoZUeea.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./floatRGBA-C1cATMmH.js";import"./definitions-CPtb4TQS.js";import"./UpdateTracking2D-BE0X_cYT.js";import"./Rect-CEwwXEbD.js";import"./CIMSymbolHelper-HLdznesu.js";import"./vec2f32-BbH2jxlN.js";import"./OverrideHelper-BfWEjNoq.js";import"./EffectView-OuL-vUR0.js";import"./Container-BVEM2dYL.js";import{u as H}from"./MapView-ByJwWh21.js";import"./WGLContainer-C8hlul1E.js";import"./enums-Dk3osxpS.js";import"./Texture-BRjzxtp8.js";import"./dataViewUtils-HguZvOv-.js";import"./config-DoMhnbNN.js";import"./enums-BRzLM11V.js";import"./GridShader-vMOYMrc8.js";import"./pbf-D2bQO8xL.js";import"./TechniqueType-uMFRS8dR.js";import"./FramebufferObject-96DJ1a5j.js";import"./FeatureCommandQueue-BbHULJ6F.js";import"./PieChartMeshWriter-xFOE1Tg8.js";import"./renderState-fiZ8Gckm.js";import"./glsl-BH37Aalp.js";import"./testSVGPremultipliedAlpha-BOqWrgcu.js";import{A as v}from"./GraphicsView2D-DsCpzDI9.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import"./normalizeUtils-CalGZKgb.js";import"./UpdatingHandles-CqLMgYyG.js";import"./projection-voo92M7M.js";import{r as C,o as l,n as d}from"./imageUtils-O9iqUcvl.js";import{S as q}from"./LayerView2D-MVtr_TQq.js";import{h as U}from"./HighlightGraphicContainer-C60q7Hxn.js";import{h as b,p as S,r as Q,e as _}from"./Tile-BdM53ppT.js";import{y as G}from"./LayerView-Tj0SSyMd.js";import{i as $}from"./RefreshableLayerView-BOBn8Kcd.js";import{P,S as L}from"./MapServiceLayerViewHelper-B8NVboJH.js";import{r as k}from"./drapedUtils-nufhV_72.js";import{c as F}from"./HighlightDefaults-DPfsswKd.js";import{g as z}from"./Scheduler-PhIj5Ja0.js";import"./preload-helper-ExcqyqRp.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ReactiveMap-BujJHLCi.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BbL8iUHE.js";import"./OptimizedGeometry-xl1seJX_.js";import"./memoryEstimations-BdbqPV2G.js";import"./utils-BRg6PM3S.js";import"./rasterizingUtils-DrIznsIy.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./BoundingBox-CnpCxTZE.js";import"./callExpressionWithFeature-D8XhoL3m.js";import"./quantizationUtils-C0rp1ynu.js";import"./parser-CrueJdws.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BmSopjy-.js";import"./globalCss-DTmqpTm-.js";import"./Queue-BuGVr5Nt.js";import"./signal-B2XRx4s5.js";import"./Version-CiZFdl7o.js";import"./CollectionFlattener-JYXFMrpE.js";import"./workers-D4gilSoQ.js";import"./intl-BafM9D6A.js";import"./TileInfo-B6ehUkKa.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-7e8cDo8q.js";import"./uuid-Cl5lrJ4c.js";import"./Map-UTq6MD0e.js";import"./Basemap-_gZQw-Ua.js";import"./loadAll-CTEB-mmu.js";import"./PortalItem-DNjUFnfZ.js";import"./Layer-oZ-UmqoM.js";import"./TimeExtent-CZezol20.js";import"./HeightModelInfo-BvAhzaDz.js";import"./timeZoneUtils-BjvDF32J.js";import"./Query-DDITEKyw.js";import"./Field-BhhcsUqE.js";import"./fieldType-6X7O7o6f.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-MGBJohz7.js";import"./heightModelInfoUtils-B-0stMbA.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-DohEyf3f.js";import"./mat3-CruJiiUv.js";import"./vec32-BVxZ7_pm.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DuJaRw1N.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-C96U6bcv.js";import"./ProgramTemplate-Cxo804MK.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DZBbnIhY.js";import"./featureConversionUtils-CqLOwnNL.js";import"./OptimizedFeatureSet-C57mRRlg.js";import"./getDataTypeBytes-DflDeYgv.js";import"./GraphShaderModule-CHaOshzJ.js";import"./ShaderBuilder-BkZ59xfg.js";import"./BindType-BBwFZqyN.js";import"./CircularArray-CujHzHWW.js";import"./FeatureMetadata-BQ4LdegI.js";import"./diffUtils-poGcxNFZ.js";import"./queryUtils-3fAy6FiH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-o4Oy9Eb8.js";import"./FieldsIndex-ChqC2yCw.js";import"./TimeOnly-BLi5aGmI.js";import"./labelUtils-Cd4fhqUB.js";import"./lengthUtils-DDjk7E_n.js";import"./QueueProcessor-BAjUaKl1.js";import"./libtess-CDyDqVRG.js";import"./utils-Deuy_kRp.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BWRsynOk.js";import"./dehydratedFeatures-BCJjRgPn.js";import"./utils-DFGq0666.js";import"./utils-ChN9L5aE.js";import"./BitmapTechnique-BGRJSIxl.js";import"./TileContainer-Dy4WHkiT.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-CBQysEy4.js";import"./AGraphicContainer-B_NhcHKn.js";import"./TechniqueInstance-Bmu3kL-9.js";import"./quickselect-QQC62dOK.js";import"./scaleUtils-BgSNHqGp.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-Dvj8ABL7.js";import"./popupUtils-D6LjkReK.js";const A=[0,0];let p=class extends $(C(q(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new S({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:z.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,h)=>k(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=H(t);if(e.length===0)return g();const r=i?.name??F;return this._addHighlightGraphics(e,r),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return w(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(A,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(h){if(m(h))throw h;if(!this.resampling)return l(this._tileInfoView.tileInfo.size);if(r<3){const s=this._tileInfoView.getTileParentId(t.id);if(s){const o=new _(s),a=await this._fetchTileWithoutTilemapCache(o,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,o,t)}}return l(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i,s=new _(0,0,0,0);let o,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),!this.resampling&&s.level!==t.level)return await y(i),l(this._tileInfoView.tileInfo.size);o=await this._fetchImage(s,r)}catch(c){if(m(c))throw c;if(this.resampling&&a==="unknown"&&h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){s.set(u);try{o=await this._fetchTileWithTilemapCache(s,{...i,resamplingLevel:h+1})}catch{}}}}return o?this.resampling?d(this._tileInfoView,o,s,t):o:l(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){m(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],p.prototype,"resampling",null),n([f()],p.prototype,"tilemapCache",null),p=n([T("esri.views.2d.layers.TileLayerView2D")],p);const ge=p;export{ge as default};
