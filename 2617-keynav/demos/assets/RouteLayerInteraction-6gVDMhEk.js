import{a5 as g,a6 as h,dt as u,dG as b,d8 as y,v as a,x as m,J as w}from"./main-CUH7s9Sn.js";import{h as k}from"./UpdatingHandles-CqLMgYyG.js";import _ from"./GraphicsLayer-Bs0S4UZs.js";import{T as v,j as f,a as B,w as M}from"./RouteLayerView2D-MjqW4-e0.js";import{l as V}from"./SketchViewModel-DPtjtVDr.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsCollection-CDsskFzg.js";import"./Layer-oZ-UmqoM.js";import"./TimeExtent-CZezol20.js";import"./ScaleRangeLayer-CaP4p1TE.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-CRfo8o0j.js";import"./parser-CrueJdws.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BmSopjy-.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-B8M7_-mq.js";import"./lengthUtils-DDjk7E_n.js";import"./CollectionFlattener-JYXFMrpE.js";import"./LayerView2D-MVtr_TQq.js";import"./utils-BQBvadb7.js";import"./Container-BVEM2dYL.js";import"./MapView-ByJwWh21.js";import"./globalCss-DTmqpTm-.js";import"./Queue-BuGVr5Nt.js";import"./signal-B2XRx4s5.js";import"./Version-CiZFdl7o.js";import"./workers-D4gilSoQ.js";import"./intl-BafM9D6A.js";import"./projection-voo92M7M.js";import"./TileInfo-B6ehUkKa.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-7e8cDo8q.js";import"./uuid-Cl5lrJ4c.js";import"./Map-UTq6MD0e.js";import"./Basemap-_gZQw-Ua.js";import"./loadAll-CTEB-mmu.js";import"./PortalItem-DNjUFnfZ.js";import"./HeightModelInfo-BvAhzaDz.js";import"./timeZoneUtils-BjvDF32J.js";import"./ReactiveMap-BujJHLCi.js";import"./Query-DDITEKyw.js";import"./Field-BhhcsUqE.js";import"./fieldType-6X7O7o6f.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DPfsswKd.js";import"./a11yUtils-MGBJohz7.js";import"./heightModelInfoUtils-B-0stMbA.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-CalGZKgb.js";import"./utils-DFGq0666.js";import"./utils-ChN9L5aE.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-PhIj5Ja0.js";import"./vec32-BVxZ7_pm.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-BdM53ppT.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BRjzxtp8.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DuJaRw1N.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-C96U6bcv.js";import"./EffectView-OuL-vUR0.js";import"./layerViewUtils-CBQysEy4.js";import"./GraphicContainer-L3JXkO82.js";import"./AGraphicContainer-B_NhcHKn.js";import"./TechniqueInstance-Bmu3kL-9.js";import"./UpdateTracking2D-BE0X_cYT.js";import"./dataViewUtils-HguZvOv-.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-96DJ1a5j.js";import"./VertexArrayObject-DZBbnIhY.js";import"./memoryEstimations-BdbqPV2G.js";import"./TileContainer-Dy4WHkiT.js";import"./WGLContainer-C8hlul1E.js";import"./ProgramTemplate-Cxo804MK.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CqLOwnNL.js";import"./OptimizedFeatureSet-C57mRRlg.js";import"./OptimizedGeometry-xl1seJX_.js";import"./FeatureCommandQueue-BbHULJ6F.js";import"./CIMSymbolHelper-HLdznesu.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BbL8iUHE.js";import"./Rect-CEwwXEbD.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-DrIznsIy.js";import"./floatRGBA-C1cATMmH.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CHaOshzJ.js";import"./ShaderBuilder-BkZ59xfg.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BAjUaKl1.js";import"./GraphicsView2D-DsCpzDI9.js";import"./FieldsIndex-ChqC2yCw.js";import"./OverrideHelper-BfWEjNoq.js";import"./colorUtils-DgoZUeea.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-D8XhoL3m.js";import"./quantizationUtils-C0rp1ynu.js";import"./FeatureMetadata-BQ4LdegI.js";import"./diffUtils-poGcxNFZ.js";import"./queryUtils-3fAy6FiH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-o4Oy9Eb8.js";import"./TimeOnly-BLi5aGmI.js";import"./labelUtils-Cd4fhqUB.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BWRsynOk.js";import"./dehydratedFeatures-BCJjRgPn.js";import"./LayerView-Tj0SSyMd.js";import"./quantityUtils-C4IVg9iY.js";import"./projectVectorToVector-Bmp-i5iR.js";import"./projectPointToVector-Dn5ZfUsS.js";import"./geodesicUtils-CQp4_qye.js";import"./plane-OXqzdzET.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CV755Y1n.js";function n(r,t){r.networkFeature=t}function L(r){const t=s(r.graphic);return{...r,networkFeature:t}}function S(r){const t=r.graphics.map(e=>s(e));return{...r,networkFeatures:t}}function s(r){return r.networkFeature}function F(r){return r?.type==="point"||r?.type==="polyline"||r?.type==="polygon"}let p=class extends g{constructor(r){super(r),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async t=>{switch(t.type){case"update":switch(t.state){case"active":case"complete":for(const e of t.graphics)s(e).geometry=F(e.geometry)?e.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const e of t.graphics){const o=s(e);this._removeNetworkFeature(o)}break;case"create":if(t.graphic&&t.state==="complete"&&this._createMode){const e=t.graphic.geometry?.clone(),o=t.graphic.symbol?.clone();if(!e)break;switch(this._createMode){case"stop":{if(e.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:l})=>!l)){i.at(0).geometry=e;break}if(i.length>1&&i.filter((l,d)=>d!==0).every(({geometry:l})=>!l)){i.at(1).geometry=e;break}const c=new M({geometry:e});i.add(c),n(t.graphic,c);break}case"point-barrier":{if(e.type!=="point")break;const i=new B({geometry:e,symbol:o});this.layer.pointBarriers.add(i),n(t.graphic,i);break}case"polyline-barrier":{if(e.type!=="polyline")break;const i=new f({geometry:e,symbol:o});this.layer.polylineBarriers.add(i),n(t.graphic,i);break}case"polygon-barrier":{if(e.type!=="polygon")break;const i=new v({geometry:e,symbol:o});this.layer.polygonBarriers.add(i),n(t.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(t.type,t.type==="create"?L(t):S(t))}}initialize(){this._sketchViewModel=new V({layer:this._graphicsLayer,view:this.view}),this.addHandles([h(()=>this.enabled,r=>{r?this._activate():this._deactivate()},u),h(()=>{const{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}=this.layer;return{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),b(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=y(this._graphicsLayer),this._sketchViewModel=y(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(r=>s(r))}get updating(){return this._updatingHandles.updating}create(r){switch(this._createMode=r,r){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(r){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(r){const t=this._graphicsLayer.graphics.find(e=>s(e)===r);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(r)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const r=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(t=>t.toArray().map(e=>{const o=e.toGraphic();return o.networkFeature=e,o}));this._graphicsLayer.removeAll().addMany(r)}_removeNetworkFeature(r){switch(r.type){case"stop":this.layer.stops.remove(r);break;case"point-barrier":this.layer.pointBarriers.remove(r);break;case"polyline-barrier":this.layer.polylineBarriers.remove(r);break;case"polygon-barrier":this.layer.polygonBarriers.remove(r)}}};a([m()],p.prototype,"enabled",void 0),a([m({constructOnly:!0})],p.prototype,"layer",void 0),a([m({readOnly:!0})],p.prototype,"selectedNetworkFeatures",null),a([m()],p.prototype,"updating",null),a([m({constructOnly:!0})],p.prototype,"view",void 0),p=a([w("esri.views.2d.layers.support.RouteLayerInteraction")],p);export{p as RouteLayerInteraction};
