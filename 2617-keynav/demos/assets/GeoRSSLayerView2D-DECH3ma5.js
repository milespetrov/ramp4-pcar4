import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main-CUH7s9Sn.js";import{p as n}from"./SimpleRenderer-CzHvQNOK.js";import{fromJSON as u}from"./jsonUtils-fcQdeCod.js";import{d as S}from"./FeatureSet-CzFGkfJn.js";import{S as V}from"./LayerView2D-MVtr_TQq.js";import{t as b}from"./GraphicContainer-L3JXkO82.js";import{A as _}from"./GraphicsView2D-DsCpzDI9.js";import{y as T}from"./LayerView-Tj0SSyMd.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-O4EclM75.js";import"./colorRamps-B4ooF9E2.js";import"./ColorStop-BvEitoQE.js";import"./visualVariableUtils-qBHkeeYF.js";import"./lengthUtils-DDjk7E_n.js";import"./typeUtils-DOp2eo19.js";import"./ClassBreaksRenderer-CSWXEzcd.js";import"./RendererLegendOptions-DO3N6nMn.js";import"./LRUCache-DLfc_-3F.js";import"./MemCache-DyZ34pF9.js";import"./Version-CiZFdl7o.js";import"./FieldsIndex-ChqC2yCw.js";import"./timeZoneUtils-BjvDF32J.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-xdmOTgTs.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-CrxJY1O9.js";import"./diffUtils-poGcxNFZ.js";import"./styleUtils-Btp44JGj.js";import"./Field-BhhcsUqE.js";import"./fieldType-6X7O7o6f.js";import"./utils-BQBvadb7.js";import"./Container-BVEM2dYL.js";import"./MapView-ByJwWh21.js";import"./globalCss-DTmqpTm-.js";import"./Queue-BuGVr5Nt.js";import"./signal-B2XRx4s5.js";import"./CollectionFlattener-JYXFMrpE.js";import"./workers-D4gilSoQ.js";import"./intl-BafM9D6A.js";import"./projection-voo92M7M.js";import"./TileInfo-B6ehUkKa.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-7e8cDo8q.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CqLMgYyG.js";import"./Map-UTq6MD0e.js";import"./Basemap-_gZQw-Ua.js";import"./loadAll-CTEB-mmu.js";import"./PortalItem-DNjUFnfZ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BmSopjy-.js";import"./Layer-oZ-UmqoM.js";import"./TimeExtent-CZezol20.js";import"./GraphicsCollection-CDsskFzg.js";import"./HeightModelInfo-BvAhzaDz.js";import"./ReactiveMap-BujJHLCi.js";import"./Query-DDITEKyw.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DPfsswKd.js";import"./a11yUtils-MGBJohz7.js";import"./heightModelInfoUtils-B-0stMbA.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-CalGZKgb.js";import"./utils-DFGq0666.js";import"./utils-ChN9L5aE.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-PhIj5Ja0.js";import"./vec32-BVxZ7_pm.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-BdM53ppT.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BRjzxtp8.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DuJaRw1N.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-C96U6bcv.js";import"./EffectView-OuL-vUR0.js";import"./parser-CrueJdws.js";import"./layerViewUtils-CBQysEy4.js";import"./AGraphicContainer-B_NhcHKn.js";import"./TechniqueInstance-Bmu3kL-9.js";import"./UpdateTracking2D-BE0X_cYT.js";import"./dataViewUtils-HguZvOv-.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-96DJ1a5j.js";import"./VertexArrayObject-DZBbnIhY.js";import"./memoryEstimations-BdbqPV2G.js";import"./TileContainer-Dy4WHkiT.js";import"./WGLContainer-C8hlul1E.js";import"./ProgramTemplate-Cxo804MK.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CqLOwnNL.js";import"./OptimizedFeatureSet-C57mRRlg.js";import"./OptimizedGeometry-xl1seJX_.js";import"./FeatureCommandQueue-BbHULJ6F.js";import"./CIMSymbolHelper-HLdznesu.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BbL8iUHE.js";import"./Rect-CEwwXEbD.js";import"./rasterizingUtils-DrIznsIy.js";import"./floatRGBA-C1cATMmH.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CHaOshzJ.js";import"./ShaderBuilder-BkZ59xfg.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BAjUaKl1.js";import"./OverrideHelper-BfWEjNoq.js";import"./colorUtils-DgoZUeea.js";import"./callExpressionWithFeature-D8XhoL3m.js";import"./quantizationUtils-C0rp1ynu.js";import"./FeatureMetadata-BQ4LdegI.js";import"./queryUtils-3fAy6FiH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-o4Oy9Eb8.js";import"./TimeOnly-BLi5aGmI.js";import"./labelUtils-Cd4fhqUB.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BWRsynOk.js";import"./dehydratedFeatures-BCJjRgPn.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};
