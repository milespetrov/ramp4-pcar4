import{v as i,x as n,J as c,a6 as a,s as d,fd as h,Q as l,df as y}from"./main-CUH7s9Sn.js";import{d as u}from"./FeatureSet-CzFGkfJn.js";import{n as _,d as g}from"./FeatureLayerView2D-CSTRJIOT.js";import f from"./FeatureFilter-qjv1JQEZ.js";import"./preload-helper-ExcqyqRp.js";import"./Field-BhhcsUqE.js";import"./fieldType-6X7O7o6f.js";import"./UpdatingHandles-CqLMgYyG.js";import"./EffectView-OuL-vUR0.js";import"./parser-CrueJdws.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BmSopjy-.js";import"./common-DQOJ18NT.js";import"./featureConversionUtils-CqLOwnNL.js";import"./OptimizedFeatureSet-C57mRRlg.js";import"./memoryEstimations-BdbqPV2G.js";import"./OptimizedGeometry-xl1seJX_.js";import"./labelingInfo-DOZts13z.js";import"./uuid-Cl5lrJ4c.js";import"./Query-DDITEKyw.js";import"./TimeExtent-CZezol20.js";import"./SimpleRenderer-CzHvQNOK.js";import"./commonProperties-O4EclM75.js";import"./colorRamps-B4ooF9E2.js";import"./ColorStop-BvEitoQE.js";import"./visualVariableUtils-qBHkeeYF.js";import"./lengthUtils-DDjk7E_n.js";import"./UniqueValueRenderer-CrxJY1O9.js";import"./diffUtils-poGcxNFZ.js";import"./RendererLegendOptions-DO3N6nMn.js";import"./styleUtils-Btp44JGj.js";import"./RelationshipQuery-Bd9hodxh.js";import"./NormalizationBinParametersMixin-BEXL_-Dq.js";import"./labelUtils-Cd4fhqUB.js";import"./timeSupport-C0b8agvi.js";import"./globalCss-DTmqpTm-.js";import"./Queue-BuGVr5Nt.js";import"./signal-B2XRx4s5.js";import"./Version-CiZFdl7o.js";import"./AttributeBinsFeatureSet-CYD420nQ.js";import"./AttributeBinsQuery-B_NEY4uO.js";import"./queryUtils-3fAy6FiH.js";import"./projection-voo92M7M.js";import"./normalizeUtils-CalGZKgb.js";import"./utils-DFGq0666.js";import"./utils-ChN9L5aE.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-B1tEyDOD.js";import"./timeZoneUtils-BjvDF32J.js";import"./LayerView2D-MVtr_TQq.js";import"./utils-BQBvadb7.js";import"./Container-BVEM2dYL.js";import"./MapView-ByJwWh21.js";import"./CollectionFlattener-JYXFMrpE.js";import"./workers-D4gilSoQ.js";import"./intl-BafM9D6A.js";import"./TileInfo-B6ehUkKa.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-7e8cDo8q.js";import"./Map-UTq6MD0e.js";import"./Basemap-_gZQw-Ua.js";import"./loadAll-CTEB-mmu.js";import"./PortalItem-DNjUFnfZ.js";import"./Layer-oZ-UmqoM.js";import"./GraphicsCollection-CDsskFzg.js";import"./HeightModelInfo-BvAhzaDz.js";import"./ReactiveMap-BujJHLCi.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DPfsswKd.js";import"./a11yUtils-MGBJohz7.js";import"./heightModelInfoUtils-B-0stMbA.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-PhIj5Ja0.js";import"./vec32-BVxZ7_pm.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-BdM53ppT.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BRjzxtp8.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DuJaRw1N.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-C96U6bcv.js";import"./layerViewUtils-CBQysEy4.js";import"./TechniqueInstance-Bmu3kL-9.js";import"./UpdateTracking2D-BE0X_cYT.js";import"./dataViewUtils-HguZvOv-.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-96DJ1a5j.js";import"./VertexArrayObject-DZBbnIhY.js";import"./TileContainer-Dy4WHkiT.js";import"./WGLContainer-C8hlul1E.js";import"./ProgramTemplate-Cxo804MK.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BbHULJ6F.js";import"./CIMSymbolHelper-HLdznesu.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BbL8iUHE.js";import"./Rect-CEwwXEbD.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-DrIznsIy.js";import"./floatRGBA-C1cATMmH.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CHaOshzJ.js";import"./ShaderBuilder-BkZ59xfg.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BAjUaKl1.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./heatmapUtils-xdmOTgTs.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SDFHelper-D0tb4kik.js";import"./parquet-C_CwMvk3.js";import"./displayFilterUtils-Dtfjbrqt.js";import"./FeatureEffect-BJn0Uu6M.js";import"./jsonUtils-CRfo8o0j.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-D6LjkReK.js";import"./LayerView-Tj0SSyMd.js";import"./RefreshableLayerView-BOBn8Kcd.js";const v=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:f})],e.prototype,"filter",void 0),e=i([c("esri.views.layers.StreamLayerView")],e),e};let s=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return l(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(m=>{const p=u.fromJSON(m);return p.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),p}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,e){return(await super.queryObjectIds(t,e)).filter(y)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([c("esri.views.2d.layers.StreamLayerView2D")],s);const ze=s;export{ze as default};
